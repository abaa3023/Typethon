Syntax error at 'and'
Syntax error at 'and'
Syntax error at 'and'
------------------CORRECT TREE--------------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=Constant(value=1)),
        Assign(
            targets=[
                Name(id='y', ctx=Store())],
            value=Constant(value=2)),
        Assign(
            targets=[
                Name(id='z', ctx=Store())],
            value=Constant(value=3)),
        Assign(
            targets=[
                Name(id='w', ctx=Store())],
            value=Constant(value=4)),
        Assign(
            targets=[
                Name(id='v', ctx=Store())],
            value=BinOp(
                left=BinOp(
                    left=BinOp(
                        left=Name(id='x', ctx=Load()),
                        op=Add(),
                        right=Name(id='y', ctx=Load())),
                    op=Add(),
                    right=Name(id='z', ctx=Load())),
                op=Add(),
                right=Name(id='w', ctx=Load()))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    BoolOp(
                        op=And(),
                        values=[
                            BoolOp(
                                op=And(),
                                values=[
                                    Name(id='x', ctx=Load()),
                                    Name(id='y', ctx=Load())]),
                            BoolOp(
                                op=And(),
                                values=[
                                    Name(id='z', ctx=Load()),
                                    Name(id='w', ctx=Load())])])],
                keywords=[])),
        Assign(
            targets=[
                Name(id='v', ctx=Store())],
            value=BinOp(
                left=BinOp(
                    left=BinOp(
                        left=Name(id='v', ctx=Load()),
                        op=Add(),
                        right=Name(id='v', ctx=Load())),
                    op=Add(),
                    right=Name(id='v', ctx=Load())),
                op=Add(),
                right=Name(id='v', ctx=Load()))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    BoolOp(
                        op=And(),
                        values=[
                            Name(id='v', ctx=Load()),
                            Name(id='v', ctx=Load())])],
                keywords=[]))],
    type_ignores=[])
------------------Tree with my parser--------------
Module(body=[], type_ignores=[])
--------------Original code----------------
x = 1
y = 2
z = 3
w = 4
v = x + y + z + w
print((x and y) and (z and w))
v = v + v + v + v
print(v and v)

Module(body=[], type_ignores=[])
Module(body=[], type_ignores=[])
--------------Code after flattening-------


--------------Explicate code-------



--- explicated flattened python ---



--- x86 IR ---


--- Control Flow Graph ---
