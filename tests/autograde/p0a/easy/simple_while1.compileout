--------------Original code----------------
x = 1
y = 100
while (int(x != y)):
  x = x + 1
  print(x and y)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Constant(value=1)),
          Assign(
               targets=[
                    Name(id='y', ctx=Store())],
               value=Constant(value=100)),
          While(
               test=Call(
                    func=Name(id='int', ctx=Load()),
                    args=[
                         Compare(
                              left=Name(id='x', ctx=Load()),
                              ops=[
                                   NotEq()],
                              comparators=[
                                   Name(id='y', ctx=Load())])],
                    keywords=[]),
               body=[
                    Assign(
                         targets=[
                              Name(id='x', ctx=Store())],
                         value=BinOp(
                              left=Name(id='x', ctx=Load()),
                              op=Add(),
                              right=Constant(value=1))),
                    Expr(
                         value=Call(
                              func=Name(id='print', ctx=Load()),
                              args=[
                                   BoolOp(
                                        op=And(),
                                        values=[
                                             Name(id='x', ctx=Load()),
                                             Name(id='y', ctx=Load())])],
                              keywords=[]))],
               orelse=[])],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Constant(value=1)),
          Assign(
               targets=[
                    Name(id='y', ctx=Store())],
               value=Constant(value=100)),
          Assign(
               targets=[
                    Name(id='new_temp3', ctx=Store())],
               value=Compare(
                    left=Name(id='x', ctx=Load()),
                    ops=[
                         NotEq()],
                    comparators=[
                         Name(id='y', ctx=Load())])),
          Assign(
               targets=[
                    Name(id='new_temp4', ctx=Store())],
               value=Name(id='new_temp3', ctx=Store())),
          Assign(
               targets=[
                    Name(id='new_temp5', ctx=Store())],
               value=Call(
                    func=Name(id='int', ctx=Load()),
                    args=[
                         Name(id='new_temp4', ctx=Load())],
                    keywords=[])),
          While(
               test=Name(id='new_temp5', ctx=Load()),
               body=[
                    Assign(
                         targets=[
                              Name(id='new_temp0', ctx=Store())],
                         value=BinOp(
                              left=Name(id='x', ctx=Load()),
                              op=Add(),
                              right=Constant(value=1))),
                    Assign(
                         targets=[
                              Name(id='x', ctx=Store())],
                         value=Name(id='new_temp0', ctx=Load())),
                    If(
                         test=Name(id='x', ctx=Load()),
                         body=[
                              Assign(
                                   targets=[
                                        Name(id='new_temp1', ctx=Store())],
                                   value=Name(id='y', ctx=Load()))],
                         orelse=[
                              Assign(
                                   targets=[
                                        Name(id='new_temp1', ctx=Store())],
                                   value=Name(id='x', ctx=Load()))]),
                    Assign(
                         targets=[
                              Name(id='new_temp2', ctx=Store())],
                         value=Name(id='new_temp1', ctx=Store())),
                    Expr(
                         value=Call(
                              func=Name(id='print', ctx=Load()),
                              args=[
                                   Name(id='new_temp2', ctx=Load())],
                              keywords=[])),
                    Assign(
                         targets=[
                              Name(id='new_temp3', ctx=Store())],
                         value=Compare(
                              left=Name(id='x', ctx=Load()),
                              ops=[
                                   NotEq()],
                              comparators=[
                                   Name(id='y', ctx=Load())])),
                    Assign(
                         targets=[
                              Name(id='new_temp4', ctx=Store())],
                         value=Name(id='new_temp3', ctx=Store())),
                    Assign(
                         targets=[
                              Name(id='new_temp5', ctx=Store())],
                         value=Call(
                              func=Name(id='int', ctx=Load()),
                              args=[
                                   Name(id='new_temp4', ctx=Load())],
                              keywords=[]))],
               orelse=[])],
     type_ignores=[])
--------------Code after flattening-------
x = 1
y = 100
new_temp3 = x != y
new_temp4 = new_temp3
new_temp5 = int(new_temp4)
while new_temp5:
    new_temp0 = x + 1
    x = new_temp0
    if x:
        new_temp1 = y
    else:
        new_temp1 = x
    new_temp2 = new_temp1
    print(new_temp2)
    new_temp3 = x != y
    new_temp4 = new_temp3
    new_temp5 = int(new_temp4)
<ast.Constant object at 0x7fdf6e1fbf10>
<ast.Constant object at 0x7fdf6e249660>
inject_bool(not_equal(project_big(explicate_6),project_big(explicate_7)))
inject_bool(1)
inject_bool(1)
inject_bool(explicate_8!=explicate_9)
<ast.Name object at 0x7fdf6e248b50>
inject_int(project_bool(explicate_10))
inject_big(add(project_big(explicate_11),project_big(explicate_12)))
inject_int(explicate_13+explicate_14)
<ast.Name object at 0x7fdf6e248f70>
<ast.Name object at 0x7fdf6e2492d0>
<ast.Name object at 0x7fdf6e249300>
<ast.Name object at 0x7fdf6e2496f0>
inject_bool(not_equal(project_big(explicate_15),project_big(explicate_16)))
inject_bool(1)
inject_bool(1)
inject_bool(explicate_17!=explicate_18)
<ast.Name object at 0x7fdf6e248b50>
inject_int(project_bool(explicate_19))

x = inject_int(1)
y = inject_int(100)
explicate_6 = x
explicate_7 = y
if(is_big(explicate_6)):
	if(is_big(explicate_7)):
		new_temp3 = inject_bool(not_equal(project_big(explicate_6),project_big(explicate_7)))
	else:
		new_temp3 = inject_bool(1)
else:
	if(is_big(explicate_7)):
		new_temp3 = inject_bool(1)
	else:
		if(is_int(explicate_6)):
			explicate_8 = project_int(explicate_6)
		else:
			explicate_8 = project_bool(explicate_6)
		if(is_int(explicate_7)):
			explicate_9 = project_int(explicate_7)
		else:
			explicate_9 = project_bool(explicate_7)
		new_temp3 = inject_bool(explicate_8!=explicate_9)
new_temp4 = new_temp3
explicate_10 = new_temp4
if(is_bool(explicate_10)):
	new_temp5 = inject_int(project_bool(explicate_10))
while(is_true(new_temp5)):

	explicate_11 = x
	explicate_12 = inject_int(1)
	if(is_big(explicate_11)):
		if(is_big(explicate_12)):
			new_temp0 = inject_big(add(project_big(explicate_11),project_big(explicate_12)))
	else:
		if(is_big(explicate_12)):
			error_pyobj(0)
		else:
			if(is_int(explicate_11)):
				explicate_13 = project_int(explicate_11)
			else:
				explicate_13 = project_bool(explicate_11)
			if(is_int(explicate_12)):
				explicate_14 = project_int(explicate_12)
			else:
				explicate_14 = project_bool(explicate_12)
			new_temp0 = inject_int(explicate_13+explicate_14)
	x = new_temp0
	if(is_true(x)):
	
		new_temp1 = y
	else:
	
		new_temp1 = x
	new_temp2 = new_temp1
	print(new_temp2)
	explicate_15 = x
	explicate_16 = y
	if(is_big(explicate_15)):
		if(is_big(explicate_16)):
			new_temp3 = inject_bool(not_equal(project_big(explicate_15),project_big(explicate_16)))
		else:
			new_temp3 = inject_bool(1)
	else:
		if(is_big(explicate_16)):
			new_temp3 = inject_bool(1)
		else:
			if(is_int(explicate_15)):
				explicate_17 = project_int(explicate_15)
			else:
				explicate_17 = project_bool(explicate_15)
			if(is_int(explicate_16)):
				explicate_18 = project_int(explicate_16)
			else:
				explicate_18 = project_bool(explicate_16)
			new_temp3 = inject_bool(explicate_17!=explicate_18)
	new_temp4 = new_temp3
	explicate_19 = new_temp4
	if(is_bool(explicate_19)):
		new_temp5 = inject_int(project_bool(explicate_19))
--------------Explicate code-------
x = inject_int(1)
y = inject_int(100)
explicate_6 = x
explicate_7 = y
if is_big(explicate_6):
    if is_big(explicate_7):
        new_temp3 = inject_bool(not_equal(project_big(explicate_6), project_big(explicate_7)))
    else:
        new_temp3 = inject_bool(1)
elif is_big(explicate_7):
    new_temp3 = inject_bool(1)
else:
    if is_int(explicate_6):
        explicate_8 = project_int(explicate_6)
    else:
        explicate_8 = project_bool(explicate_6)
    if is_int(explicate_7):
        explicate_9 = project_int(explicate_7)
    else:
        explicate_9 = project_bool(explicate_7)
    new_temp3 = inject_bool(explicate_8 != explicate_9)
new_temp4 = new_temp3
explicate_10 = new_temp4
if is_bool(explicate_10):
    new_temp5 = inject_int(project_bool(explicate_10))
while is_true(new_temp5):
    explicate_11 = x
    explicate_12 = inject_int(1)
    if is_big(explicate_11):
        if is_big(explicate_12):
            new_temp0 = inject_big(add(project_big(explicate_11), project_big(explicate_12)))
    elif is_big(explicate_12):
        error_pyobj(0)
    else:
        if is_int(explicate_11):
            explicate_13 = project_int(explicate_11)
        else:
            explicate_13 = project_bool(explicate_11)
        if is_int(explicate_12):
            explicate_14 = project_int(explicate_12)
        else:
            explicate_14 = project_bool(explicate_12)
        new_temp0 = inject_int(explicate_13 + explicate_14)
    x = new_temp0
    if is_true(x):
        new_temp1 = y
    else:
        new_temp1 = x
    new_temp2 = new_temp1
    print(new_temp2)
    explicate_15 = x
    explicate_16 = y
    if is_big(explicate_15):
        if is_big(explicate_16):
            new_temp3 = inject_bool(not_equal(project_big(explicate_15), project_big(explicate_16)))
        else:
            new_temp3 = inject_bool(1)
    elif is_big(explicate_16):
        new_temp3 = inject_bool(1)
    else:
        if is_int(explicate_15):
            explicate_17 = project_int(explicate_15)
        else:
            explicate_17 = project_bool(explicate_15)
        if is_int(explicate_16):
            explicate_18 = project_int(explicate_16)
        else:
            explicate_18 = project_bool(explicate_16)
        new_temp3 = inject_bool(explicate_17 != explicate_18)
    new_temp4 = new_temp3
    explicate_19 = new_temp4
    if is_bool(explicate_19):
        new_temp5 = inject_int(project_bool(explicate_19))


--- explicated flattened python ---
new_temp20 = inject_int(1)
x = new_temp20
new_temp21 = inject_int(100)
y = new_temp21
explicate_6 = x
explicate_7 = y
new_temp22 = is_big(explicate_6)
if new_temp22:
    new_temp23 = is_big(explicate_7)
    if new_temp23:
        new_temp24 = project_big(explicate_6)
        new_temp25 = project_big(explicate_7)
        new_temp26 = not_equal(new_temp24, new_temp25)
        new_temp27 = inject_bool(new_temp26)
        new_temp3 = new_temp27
    else:
        new_temp28 = inject_bool(1)
        new_temp3 = new_temp28
else:
    new_temp29 = is_big(explicate_7)
    if new_temp29:
        new_temp30 = inject_bool(1)
        new_temp3 = new_temp30
    else:
        new_temp31 = is_int(explicate_6)
        if new_temp31:
            new_temp32 = project_int(explicate_6)
            explicate_8 = new_temp32
        else:
            new_temp33 = project_bool(explicate_6)
            explicate_8 = new_temp33
        new_temp34 = is_int(explicate_7)
        if new_temp34:
            new_temp35 = project_int(explicate_7)
            explicate_9 = new_temp35
        else:
            new_temp36 = project_bool(explicate_7)
            explicate_9 = new_temp36
        new_temp37 = explicate_8 != explicate_9
        new_temp38 = new_temp37
        new_temp39 = inject_bool(new_temp38)
        new_temp3 = new_temp39
new_temp4 = new_temp3
explicate_10 = new_temp4
new_temp40 = is_bool(explicate_10)
if new_temp40:
    new_temp41 = project_bool(explicate_10)
    new_temp42 = inject_int(new_temp41)
    new_temp5 = new_temp42
new_temp81 = is_true(new_temp5)
while new_temp81:
    explicate_11 = x
    new_temp43 = inject_int(1)
    explicate_12 = new_temp43
    new_temp44 = is_big(explicate_11)
    if new_temp44:
        new_temp45 = is_big(explicate_12)
        if new_temp45:
            new_temp46 = project_big(explicate_11)
            new_temp47 = project_big(explicate_12)
            new_temp48 = add(new_temp46, new_temp47)
            new_temp49 = inject_big(new_temp48)
            new_temp0 = new_temp49
    else:
        new_temp50 = is_big(explicate_12)
        if new_temp50:
            error_pyobj(0)
        else:
            new_temp51 = is_int(explicate_11)
            if new_temp51:
                new_temp52 = project_int(explicate_11)
                explicate_13 = new_temp52
            else:
                new_temp53 = project_bool(explicate_11)
                explicate_13 = new_temp53
            new_temp54 = is_int(explicate_12)
            if new_temp54:
                new_temp55 = project_int(explicate_12)
                explicate_14 = new_temp55
            else:
                new_temp56 = project_bool(explicate_12)
                explicate_14 = new_temp56
            new_temp57 = explicate_13 + explicate_14
            new_temp58 = inject_int(new_temp57)
            new_temp0 = new_temp58
    x = new_temp0
    new_temp59 = is_true(x)
    if new_temp59:
        new_temp1 = y
    else:
        new_temp1 = x
    new_temp2 = new_temp1
    print(new_temp2)
    explicate_15 = x
    explicate_16 = y
    new_temp60 = is_big(explicate_15)
    if new_temp60:
        new_temp61 = is_big(explicate_16)
        if new_temp61:
            new_temp62 = project_big(explicate_15)
            new_temp63 = project_big(explicate_16)
            new_temp64 = not_equal(new_temp62, new_temp63)
            new_temp65 = inject_bool(new_temp64)
            new_temp3 = new_temp65
        else:
            new_temp66 = inject_bool(1)
            new_temp3 = new_temp66
    else:
        new_temp67 = is_big(explicate_16)
        if new_temp67:
            new_temp68 = inject_bool(1)
            new_temp3 = new_temp68
        else:
            new_temp69 = is_int(explicate_15)
            if new_temp69:
                new_temp70 = project_int(explicate_15)
                explicate_17 = new_temp70
            else:
                new_temp71 = project_bool(explicate_15)
                explicate_17 = new_temp71
            new_temp72 = is_int(explicate_16)
            if new_temp72:
                new_temp73 = project_int(explicate_16)
                explicate_18 = new_temp73
            else:
                new_temp74 = project_bool(explicate_16)
                explicate_18 = new_temp74
            new_temp75 = explicate_17 != explicate_18
            new_temp76 = new_temp75
            new_temp77 = inject_bool(new_temp76)
            new_temp3 = new_temp77
    new_temp4 = new_temp3
    explicate_19 = new_temp4
    new_temp78 = is_bool(explicate_19)
    if new_temp78:
        new_temp79 = project_bool(explicate_19)
        new_temp80 = inject_int(new_temp79)
        new_temp5 = new_temp80
    new_temp81 = is_true(new_temp5)


--- x86 IR ---
call  inject_int 1
movl  eax ,  new_temp20
movl  new_temp20 ,  x
call  inject_int 100
movl  eax ,  new_temp21
movl  new_temp21 ,  y
movl  x ,  explicate_6
movl  y ,  explicate_7
call  is_big explicate_6
movl  eax ,  new_temp22
if1
cmp 0, new_temp22
je else1
then1
call  is_big explicate_7
movl  eax ,  new_temp23
if2
cmp 0, new_temp23
je else2
then2
call  project_big explicate_6
movl  eax ,  new_temp24
call  project_big explicate_7
movl  eax ,  new_temp25
call  not_equal new_temp24,new_temp25
movl  eax ,  new_temp26
call  inject_bool new_temp26
movl  eax ,  new_temp27
movl  new_temp27 ,  new_temp3
else2
call  inject_bool 1
movl  eax ,  new_temp28
movl  new_temp28 ,  new_temp3
end if2
else1
call  is_big explicate_7
movl  eax ,  new_temp29
if2
cmp 0, new_temp29
je else2
then2
call  inject_bool 1
movl  eax ,  new_temp30
movl  new_temp30 ,  new_temp3
else2
call  is_int explicate_6
movl  eax ,  new_temp31
if3
cmp 0, new_temp31
je else3
then3
call  project_int explicate_6
movl  eax ,  new_temp32
movl  new_temp32 ,  explicate_8
else3
call  project_bool explicate_6
movl  eax ,  new_temp33
movl  new_temp33 ,  explicate_8
end if3
call  is_int explicate_7
movl  eax ,  new_temp34
if4
cmp 0, new_temp34
je else4
then4
call  project_int explicate_7
movl  eax ,  new_temp35
movl  new_temp35 ,  explicate_9
else4
call  project_bool explicate_7
movl  eax ,  new_temp36
movl  new_temp36 ,  explicate_9
end if4
int_compare  explicate_8 NotEq explicate_9 ,  new_temp37
movl  new_temp37 ,  new_temp38
call  inject_bool new_temp38
movl  eax ,  new_temp39
movl  new_temp39 ,  new_temp3
end if2
end if1
movl  new_temp3 ,  new_temp4
movl  new_temp4 ,  explicate_10
call  is_bool explicate_10
movl  eax ,  new_temp40
if2
cmp 0, new_temp40
je end if2
then2
call  project_bool explicate_10
movl  eax ,  new_temp41
call  inject_int new_temp41
movl  eax ,  new_temp42
movl  new_temp42 ,  new_temp5
end if2
call  is_true new_temp5
movl  eax ,  new_temp81
While1
cmp 0, new_temp81
je endl While1
movl  x ,  explicate_11
call  inject_int 1
movl  eax ,  new_temp43
movl  new_temp43 ,  explicate_12
call  is_big explicate_11
movl  eax ,  new_temp44
if3
cmp 0, new_temp44
je else3
then3
call  is_big explicate_12
movl  eax ,  new_temp45
if4
cmp 0, new_temp45
je end if4
then4
call  project_big explicate_11
movl  eax ,  new_temp46
call  project_big explicate_12
movl  eax ,  new_temp47
call  add new_temp46,new_temp47
movl  eax ,  new_temp48
call  inject_big new_temp48
movl  eax ,  new_temp49
movl  new_temp49 ,  new_temp0
end if4
else3
call  is_big explicate_12
movl  eax ,  new_temp50
if4
cmp 0, new_temp50
je else4
then4
call  error_pyobj 0
else4
call  is_int explicate_11
movl  eax ,  new_temp51
if5
cmp 0, new_temp51
je else5
then5
call  project_int explicate_11
movl  eax ,  new_temp52
movl  new_temp52 ,  explicate_13
else5
call  project_bool explicate_11
movl  eax ,  new_temp53
movl  new_temp53 ,  explicate_13
end if5
call  is_int explicate_12
movl  eax ,  new_temp54
if6
cmp 0, new_temp54
je else6
then6
call  project_int explicate_12
movl  eax ,  new_temp55
movl  new_temp55 ,  explicate_14
else6
call  project_bool explicate_12
movl  eax ,  new_temp56
movl  new_temp56 ,  explicate_14
end if6
movl  explicate_13 ,  new_temp57
addl  explicate_14 ,  new_temp57
call  inject_int new_temp57
movl  eax ,  new_temp58
movl  new_temp58 ,  new_temp0
end if4
end if3
movl  new_temp0 ,  x
call  is_true x
movl  eax ,  new_temp59
if4
cmp 0, new_temp59
je else4
then4
movl  y ,  new_temp1
else4
movl  x ,  new_temp1
end if4
movl  new_temp1 ,  new_temp2
call  print new_temp2
movl  x ,  explicate_15
movl  y ,  explicate_16
call  is_big explicate_15
movl  eax ,  new_temp60
if5
cmp 0, new_temp60
je else5
then5
call  is_big explicate_16
movl  eax ,  new_temp61
if6
cmp 0, new_temp61
je else6
then6
call  project_big explicate_15
movl  eax ,  new_temp62
call  project_big explicate_16
movl  eax ,  new_temp63
call  not_equal new_temp62,new_temp63
movl  eax ,  new_temp64
call  inject_bool new_temp64
movl  eax ,  new_temp65
movl  new_temp65 ,  new_temp3
else6
call  inject_bool 1
movl  eax ,  new_temp66
movl  new_temp66 ,  new_temp3
end if6
else5
call  is_big explicate_16
movl  eax ,  new_temp67
if6
cmp 0, new_temp67
je else6
then6
call  inject_bool 1
movl  eax ,  new_temp68
movl  new_temp68 ,  new_temp3
else6
call  is_int explicate_15
movl  eax ,  new_temp69
if7
cmp 0, new_temp69
je else7
then7
call  project_int explicate_15
movl  eax ,  new_temp70
movl  new_temp70 ,  explicate_17
else7
call  project_bool explicate_15
movl  eax ,  new_temp71
movl  new_temp71 ,  explicate_17
end if7
call  is_int explicate_16
movl  eax ,  new_temp72
if8
cmp 0, new_temp72
je else8
then8
call  project_int explicate_16
movl  eax ,  new_temp73
movl  new_temp73 ,  explicate_18
else8
call  project_bool explicate_16
movl  eax ,  new_temp74
movl  new_temp74 ,  explicate_18
end if8
int_compare  explicate_17 NotEq explicate_18 ,  new_temp75
movl  new_temp75 ,  new_temp76
call  inject_bool new_temp76
movl  eax ,  new_temp77
movl  new_temp77 ,  new_temp3
end if6
end if5
movl  new_temp3 ,  new_temp4
movl  new_temp4 ,  explicate_19
call  is_bool explicate_19
movl  eax ,  new_temp78
if6
cmp 0, new_temp78
je end if6
then6
call  project_bool explicate_19
movl  eax ,  new_temp79
call  inject_int new_temp79
movl  eax ,  new_temp80
movl  new_temp80 ,  new_temp5
end if6
call  is_true new_temp5
movl  eax ,  new_temp81
jmp While1
endl While1


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp5': {'new_temp43', 'new_temp61', 'new_temp2', 'new_temp31', 'explicate_9', 'new_temp25', 'new_temp33', 'new_temp56', 'new_temp76', 'new_temp74', 'explicate_12', 'edx', 'new_temp70', 'new_temp54', 'new_temp63', 'new_temp49', 'explicate_17', 'new_temp32', 'explicate_14', 'explicate_18', 'explicate_16', 'new_temp55', 'new_temp66', 'explicate_13', 'new_temp81', 'x', 'new_temp50', 'new_temp1', 'explicate_7', 'new_temp71', 'new_temp36', 'new_temp57', 'new_temp75', 'new_temp22', 'new_temp37', 'explicate_10', 'new_temp78', 'new_temp60', 'new_temp73', 'new_temp68', 'ecx', 'new_temp64', 'new_temp27', 'new_temp45', 'new_temp51', 'new_temp72', 'new_temp29', 'new_temp4', 'new_temp26', 'new_temp30', 'new_temp20', 'new_temp23', 'new_temp24', 'explicate_19', 'new_temp21', 'new_temp47', 'explicate_8', 'new_temp0', 'new_temp28', 'new_temp59', 'new_temp53', 'new_temp69', 'new_temp46', 'new_temp52', 'new_temp35', 'new_temp65', 'new_temp48', 'y', 'explicate_6', 'explicate_15', 'new_temp39', 'explicate_11', 'new_temp58', 'eax', 'new_temp3', 'new_temp34', 'new_temp62', 'new_temp38', 'new_temp67', 'new_temp77', 'new_temp44', 'new_temp40'}, 'eax': {'explicate_10', 'new_temp24', 'explicate_12', 'explicate_19', 'new_temp0', 'explicate_8', 'explicate_17', 'new_temp46', 'explicate_16', 'explicate_13', 'x', 'y', 'explicate_6', 'explicate_7', 'explicate_15', 'explicate_11', 'new_temp5', 'new_temp62', 'new_temp75', 'new_temp37'}, 'ecx': {'explicate_10', 'new_temp24', 'y', 'explicate_6', 'explicate_7', 'explicate_12', 'explicate_15', 'explicate_19', 'new_temp0', 'explicate_8', 'explicate_11', 'explicate_17', 'new_temp5', 'new_temp62', 'new_temp46', 'explicate_16', 'explicate_13', 'x'}, 'edx': {'explicate_10', 'new_temp24', 'y', 'explicate_6', 'explicate_7', 'explicate_12', 'explicate_15', 'explicate_19', 'new_temp0', 'explicate_8', 'explicate_11', 'explicate_17', 'new_temp5', 'new_temp62', 'new_temp46', 'explicate_16', 'explicate_13', 'x'}, 'new_temp0': {'new_temp43', 'new_temp61', 'new_temp2', 'new_temp31', 'explicate_9', 'new_temp25', 'new_temp33', 'new_temp76', 'new_temp74', 'explicate_12', 'edx', 'new_temp70', 'new_temp63', 'explicate_17', 'new_temp32', 'explicate_18', 'explicate_16', 'new_temp66', 'new_temp81', 'x', 'new_temp50', 'new_temp1', 'explicate_7', 'new_temp71', 'new_temp36', 'new_temp75', 'new_temp22', 'new_temp37', 'explicate_10', 'new_temp78', 'new_temp80', 'new_temp60', 'new_temp73', 'new_temp68', 'new_temp42', 'ecx', 'new_temp64', 'new_temp27', 'new_temp45', 'new_temp72', 'new_temp5', 'new_temp29', 'new_temp4', 'new_temp79', 'new_temp26', 'new_temp30', 'new_temp20', 'new_temp23', 'new_temp24', 'explicate_19', 'new_temp21', 'explicate_8', 'new_temp28', 'new_temp59', 'new_temp69', 'new_temp35', 'new_temp65', 'new_temp41', 'y', 'explicate_6', 'explicate_15', 'new_temp39', 'explicate_11', 'eax', 'new_temp3', 'new_temp34', 'new_temp62', 'new_temp38', 'new_temp67', 'new_temp77', 'new_temp44', 'new_temp40'}, 'new_temp20': {'new_temp5', 'new_temp0'}, 'x': {'new_temp38', 'explicate_10', 'new_temp78', 'new_temp80', 'new_temp61', 'new_temp2', 'new_temp31', 'new_temp60', 'new_temp73', 'new_temp68', 'new_temp42', 'ecx', 'new_temp64', 'explicate_9', 'new_temp25', 'new_temp72', 'new_temp5', 'new_temp33', 'new_temp29', 'new_temp4', 'new_temp79', 'new_temp26', 'new_temp76', 'new_temp30', 'new_temp74', 'new_temp23', 'new_temp24', 'edx', 'new_temp21', 'explicate_19', 'new_temp70', 'new_temp0', 'explicate_8', 'new_temp28', 'new_temp59', 'new_temp32', 'new_temp63', 'new_temp69', 'explicate_16', 'explicate_17', 'new_temp35', 'new_temp66', 'explicate_18', 'new_temp65', 'new_temp81', 'new_temp41', 'y', 'new_temp1', 'explicate_7', 'new_temp39', 'new_temp36', 'new_temp71', 'eax', 'new_temp3', 'new_temp34', 'new_temp62', 'new_temp27', 'new_temp75', 'new_temp22', 'new_temp67', 'new_temp77', 'new_temp37', 'new_temp40'}, 'new_temp21': {'new_temp5', 'new_temp0', 'x'}, 'y': {'new_temp43', 'new_temp61', 'new_temp2', 'new_temp31', 'explicate_9', 'new_temp25', 'new_temp33', 'new_temp56', 'new_temp76', 'new_temp74', 'explicate_12', 'edx', 'new_temp70', 'new_temp54', 'new_temp63', 'new_temp49', 'explicate_17', 'new_temp32', 'explicate_14', 'explicate_18', 'new_temp55', 'new_temp66', 'explicate_13', 'new_temp81', 'x', 'new_temp50', 'new_temp1', 'new_temp71', 'new_temp36', 'new_temp57', 'new_temp75', 'new_temp22', 'new_temp37', 'explicate_10', 'new_temp78', 'new_temp80', 'new_temp60', 'new_temp73', 'new_temp68', 'new_temp42', 'ecx', 'new_temp64', 'new_temp27', 'new_temp45', 'new_temp51', 'new_temp72', 'new_temp5', 'new_temp29', 'new_temp4', 'new_temp79', 'new_temp26', 'new_temp30', 'new_temp23', 'new_temp24', 'explicate_19', 'new_temp47', 'new_temp0', 'explicate_8', 'new_temp28', 'new_temp59', 'new_temp53', 'new_temp69', 'new_temp46', 'new_temp52', 'new_temp35', 'new_temp65', 'new_temp48', 'new_temp41', 'explicate_6', 'explicate_15', 'new_temp39', 'explicate_11', 'new_temp58', 'eax', 'new_temp3', 'new_temp34', 'new_temp62', 'new_temp38', 'new_temp67', 'new_temp77', 'new_temp44', 'new_temp40'}, 'explicate_6': {'new_temp23', 'y', 'edx', 'explicate_7', 'new_temp0', 'new_temp5', 'eax', 'new_temp31', 'new_temp29', 'new_temp22', 'ecx'}, 'explicate_7': {'new_temp23', 'new_temp24', 'explicate_6', 'edx', 'new_temp0', 'explicate_8', 'new_temp32', 'new_temp5', 'eax', 'new_temp31', 'new_temp29', 'new_temp33', 'new_temp34', 'new_temp22', 'ecx', 'x'}, 'new_temp22': {'new_temp5', 'y', 'explicate_6', 'explicate_7', 'new_temp0', 'x'}, 'edi': set(), 'ebx': set(), 'esi': set(), 'new_temp23': {'new_temp5', 'explicate_6', 'y', 'explicate_7', 'new_temp0', 'x'}, 'new_temp29': {'new_temp5', 'explicate_6', 'y', 'explicate_7', 'new_temp0', 'x'}, 'new_temp24': {'edx', 'new_temp0', 'ecx', 'x', 'y', 'explicate_7', 'new_temp25', 'new_temp5', 'eax'}, 'new_temp25': {'new_temp5', 'new_temp24', 'y', 'new_temp0', 'x'}, 'new_temp26': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp27': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp3': {'y', 'new_temp0', 'new_temp5', 'x'}, 'new_temp28': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp30': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp31': {'new_temp5', 'explicate_6', 'y', 'explicate_7', 'new_temp0', 'x'}, 'new_temp4': {'y', 'new_temp0', 'new_temp5', 'x'}, 'explicate_10': {'new_temp5', 'eax', 'y', 'edx', 'new_temp0', 'ecx', 'x', 'new_temp40'}, 'new_temp40': {'new_temp5', 'explicate_10', 'y', 'new_temp0', 'x'}, 'new_temp32': {'new_temp5', 'y', 'explicate_7', 'new_temp0', 'x'}, 'explicate_8': {'edx', 'y', 'explicate_7', 'explicate_9', 'new_temp0', 'new_temp36', 'new_temp5', 'eax', 'new_temp34', 'new_temp35', 'ecx', 'x'}, 'new_temp33': {'new_temp5', 'y', 'explicate_7', 'new_temp0', 'x'}, 'new_temp41': {'x', 'new_temp0', 'y'}, 'new_temp42': {'x', 'new_temp0', 'y'}, 'new_temp81': {'y', 'new_temp0', 'new_temp5', 'x'}, 'new_temp34': {'new_temp5', 'explicate_8', 'y', 'explicate_7', 'new_temp0', 'x'}, 'new_temp35': {'new_temp5', 'explicate_8', 'y', 'new_temp0', 'x'}, 'explicate_9': {'y', 'explicate_8', 'new_temp0', 'new_temp5', 'x'}, 'new_temp36': {'new_temp5', 'explicate_8', 'y', 'new_temp0', 'x'}, 'explicate_11': {'new_temp50', 'explicate_12', 'y', 'new_temp43', 'edx', 'new_temp45', 'new_temp51', 'new_temp0', 'new_temp5', 'eax', 'ecx', 'new_temp44'}, 'new_temp43': {'new_temp5', 'new_temp0', 'explicate_11', 'y'}, 'explicate_12': {'new_temp50', 'y', 'edx', 'new_temp54', 'new_temp45', 'new_temp51', 'new_temp0', 'explicate_11', 'new_temp5', 'eax', 'new_temp46', 'new_temp52', 'new_temp53', 'explicate_13', 'ecx', 'new_temp44'}, 'new_temp44': {'new_temp5', 'explicate_12', 'y', 'new_temp0', 'explicate_11'}, 'new_temp37': {'y', 'new_temp0', 'new_temp5', 'eax', 'x'}, 'new_temp38': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp39': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp45': {'new_temp5', 'explicate_12', 'y', 'new_temp0', 'explicate_11'}, 'new_temp50': {'new_temp5', 'explicate_12', 'y', 'new_temp0', 'explicate_11'}, 'new_temp46': {'new_temp5', 'eax', 'explicate_12', 'y', 'edx', 'new_temp47', 'ecx'}, 'new_temp47': {'new_temp5', 'new_temp46', 'y'}, 'new_temp48': {'new_temp5', 'y'}, 'new_temp49': {'new_temp5', 'y'}, 'new_temp59': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp51': {'new_temp5', 'explicate_12', 'y', 'explicate_11'}, 'new_temp1': {'new_temp5', 'y', 'new_temp0', 'x'}, 'new_temp52': {'new_temp5', 'explicate_12', 'y'}, 'explicate_13': {'explicate_12', 'y', 'edx', 'new_temp54', 'new_temp5', 'eax', 'new_temp55', 'explicate_14', 'new_temp56', 'ecx'}, 'new_temp53': {'new_temp5', 'explicate_12', 'y'}, 'new_temp2': {'x', 'new_temp5', 'new_temp0', 'y'}, 'explicate_15': {'y', 'edx', 'new_temp0', 'new_temp61', 'new_temp5', 'eax', 'explicate_16', 'new_temp69', 'new_temp60', 'new_temp67', 'ecx'}, 'explicate_16': {'edx', 'new_temp70', 'explicate_15', 'new_temp71', 'new_temp0', 'new_temp61', 'explicate_17', 'new_temp72', 'new_temp5', 'eax', 'new_temp62', 'new_temp69', 'new_temp60', 'new_temp67', 'ecx', 'x'}, 'new_temp60': {'new_temp5', 'explicate_16', 'y', 'explicate_15', 'new_temp0', 'x'}, 'new_temp54': {'new_temp5', 'explicate_12', 'y', 'explicate_13'}, 'new_temp61': {'new_temp5', 'explicate_16', 'y', 'explicate_15', 'new_temp0', 'x'}, 'new_temp67': {'new_temp5', 'explicate_16', 'y', 'explicate_15', 'new_temp0', 'x'}, 'new_temp55': {'new_temp5', 'y', 'explicate_13'}, 'explicate_14': {'new_temp5', 'y', 'explicate_13', 'new_temp57'}, 'new_temp56': {'new_temp5', 'y', 'explicate_13'}, 'new_temp62': {'edx', 'new_temp0', 'new_temp63', 'explicate_16', 'ecx', 'x', 'y', 'new_temp5', 'eax'}, 'new_temp63': {'new_temp5', 'new_temp62', 'y', 'new_temp0', 'x'}, 'new_temp64': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp65': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp66': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp68': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp69': {'new_temp5', 'explicate_16', 'y', 'explicate_15', 'new_temp0', 'x'}, 'new_temp57': {'explicate_14', 'new_temp5', 'y'}, 'new_temp58': {'new_temp5', 'y'}, 'explicate_19': {'new_temp5', 'eax', 'new_temp78', 'y', 'edx', 'new_temp0', 'ecx', 'x'}, 'new_temp78': {'new_temp5', 'explicate_19', 'y', 'new_temp0', 'x'}, 'new_temp70': {'new_temp5', 'explicate_16', 'y', 'new_temp0', 'x'}, 'explicate_17': {'edx', 'y', 'new_temp0', 'new_temp72', 'new_temp5', 'eax', 'explicate_16', 'explicate_18', 'new_temp73', 'ecx', 'x', 'new_temp74'}, 'new_temp71': {'new_temp5', 'explicate_16', 'y', 'new_temp0', 'x'}, 'new_temp79': {'x', 'new_temp0', 'y'}, 'new_temp80': {'x', 'new_temp0', 'y'}, 'new_temp72': {'new_temp5', 'explicate_16', 'y', 'new_temp0', 'x', 'explicate_17'}, 'new_temp73': {'new_temp5', 'y', 'new_temp0', 'x', 'explicate_17'}, 'explicate_18': {'y', 'new_temp0', 'explicate_17', 'new_temp5', 'x'}, 'new_temp74': {'new_temp5', 'y', 'new_temp0', 'x', 'explicate_17'}, 'new_temp75': {'y', 'new_temp0', 'new_temp5', 'eax', 'x'}, 'new_temp76': {'x', 'new_temp5', 'new_temp0', 'y'}, 'new_temp77': {'x', 'new_temp5', 'new_temp0', 'y'}}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'new_temp62': 4, 'y': 5, 'new_temp0': 6, 'new_temp5': 7, 'x': 7, 'explicate_11': 4, 'explicate_12': 7, 'explicate_15': 4, 'explicate_6': 4, 'explicate_8': 4, 'explicate_19': 4, 'new_temp24': 4, 'explicate_10': 4, 'explicate_7': 5, 'explicate_16': 5, 'explicate_17': 4, 'new_temp46': 4, 'explicate_13': 4, 'new_temp40': 1, 'new_temp44': 1, 'new_temp67': 1, 'new_temp34': 1, 'new_temp37': 2, 'new_temp22': 1, 'new_temp75': 2, 'new_temp36': 1, 'new_temp50': 1, 'new_temp35': 1, 'new_temp69': 1, 'explicate_18': 1, 'new_temp63': 1, 'new_temp23': 1, 'new_temp74': 1, 'new_temp29': 1, 'new_temp72': 1, 'new_temp25': 1, 'explicate_9': 1, 'new_temp45': 1, 'new_temp73': 1, 'new_temp60': 1, 'new_temp31': 1, 'new_temp61': 1, 'new_temp43': 1, 'new_temp78': 1, 'new_temp77': 1, 'new_temp38': 1, 'new_temp27': 1, 'new_temp3': 1, 'new_temp39': 1, 'new_temp71': 1, 'new_temp1': 1, 'new_temp41': 1, 'new_temp81': 1, 'new_temp65': 1, 'new_temp30': 1, 'new_temp76': 1, 'new_temp56': 1, 'new_temp26': 1, 'new_temp79': 1, 'new_temp4': 1, 'new_temp33': 1, 'new_temp51': 1, 'new_temp64': 1, 'new_temp42': 1, 'new_temp68': 1, 'new_temp66': 1, 'new_temp55': 1, 'explicate_14': 1, 'new_temp57': 2, 'new_temp32': 1, 'new_temp59': 1, 'new_temp2': 1, 'new_temp28': 1, 'new_temp47': 1, 'new_temp54': 1, 'new_temp70': 1, 'new_temp80': 1, 'new_temp20': 1, 'new_temp52': 1, 'new_temp53': 1, 'new_temp21': 1, 'new_temp58': 1, 'new_temp49': 1, 'new_temp48': 1}
Spilled set:
 {'new_temp5', 'explicate_12', 'x'}


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'new_temp5': -4, 'explicate_12': -8, 'x': -12, 'new_temp62': 'edi', 'y': 'ebx', 'new_temp0': 'esi', 'explicate_11': 'edi', 'explicate_15': 'edi', 'explicate_6': 'edi', 'explicate_8': 'edi', 'explicate_19': 'edi', 'new_temp24': 'edi', 'explicate_10': 'edi', 'explicate_7': 'ebx', 'explicate_16': 'ebx', 'explicate_17': 'edi', 'new_temp46': 'edi', 'explicate_13': 'edi', 'new_temp40': 'eax', 'new_temp44': 'eax', 'new_temp67': 'eax', 'new_temp34': 'eax', 'new_temp37': 'ecx', 'new_temp22': 'eax', 'new_temp75': 'ecx', 'new_temp36': 'eax', 'new_temp50': 'eax', 'new_temp35': 'eax', 'new_temp69': 'eax', 'explicate_18': 'eax', 'new_temp63': 'eax', 'new_temp23': 'eax', 'new_temp74': 'eax', 'new_temp29': 'eax', 'new_temp72': 'eax', 'new_temp25': 'eax', 'explicate_9': 'eax', 'new_temp45': 'eax', 'new_temp73': 'eax', 'new_temp60': 'eax', 'new_temp31': 'eax', 'new_temp61': 'eax', 'new_temp43': 'eax', 'new_temp78': 'eax', 'new_temp77': 'eax', 'new_temp38': 'eax', 'new_temp27': 'eax', 'new_temp3': 'eax', 'new_temp39': 'eax', 'new_temp71': 'eax', 'new_temp1': 'eax', 'new_temp41': 'eax', 'new_temp81': 'eax', 'new_temp65': 'eax', 'new_temp30': 'eax', 'new_temp76': 'eax', 'new_temp56': 'eax', 'new_temp26': 'eax', 'new_temp79': 'eax', 'new_temp4': 'eax', 'new_temp33': 'eax', 'new_temp51': 'eax', 'new_temp64': 'eax', 'new_temp42': 'eax', 'new_temp68': 'eax', 'new_temp66': 'eax', 'new_temp55': 'eax', 'explicate_14': 'eax', 'new_temp57': 'ecx', 'new_temp32': 'eax', 'new_temp59': 'eax', 'new_temp2': 'eax', 'new_temp28': 'eax', 'new_temp47': 'eax', 'new_temp54': 'eax', 'new_temp70': 'eax', 'new_temp80': 'eax', 'new_temp20': 'eax', 'new_temp52': 'eax', 'new_temp53': 'eax', 'new_temp21': 'eax', 'new_temp58': 'eax', 'new_temp49': 'eax', 'new_temp48': 'eax'}
new_temp20
new_temp20
new_temp21
new_temp21
y
explicate_6
y
explicate_7
explicate_6
new_temp22
new_temp22
explicate_7
new_temp23
new_temp23
explicate_6
new_temp24
explicate_7
new_temp25
new_temp25
new_temp24
new_temp26
new_temp26
new_temp27
new_temp27
new_temp3
new_temp28
new_temp28
new_temp3
explicate_7
new_temp29
new_temp29
new_temp30
new_temp30
new_temp3
explicate_6
new_temp31
new_temp31
explicate_6
new_temp32
new_temp32
explicate_8
explicate_6
new_temp33
new_temp33
explicate_8
explicate_7
new_temp34
new_temp34
explicate_7
new_temp35
new_temp35
explicate_9
explicate_7
new_temp36
new_temp36
explicate_9
explicate_8
explicate_9
new_temp37
new_temp37
new_temp37
new_temp37
new_temp38
new_temp38
new_temp39
new_temp39
new_temp3
new_temp3
new_temp4
new_temp4
explicate_10
explicate_10
new_temp40
new_temp40
explicate_10
new_temp41
new_temp41
new_temp42
new_temp42
new_temp81
new_temp81
explicate_11
new_temp43
new_temp43
explicate_11
new_temp44
new_temp44
new_temp45
new_temp45
explicate_11
new_temp46
new_temp47
new_temp47
new_temp46
new_temp48
new_temp48
new_temp49
new_temp49
new_temp0
new_temp50
new_temp50
explicate_11
new_temp51
new_temp51
explicate_11
new_temp52
new_temp52
explicate_13
explicate_11
new_temp53
new_temp53
explicate_13
new_temp54
new_temp54
new_temp55
new_temp55
explicate_14
new_temp56
new_temp56
explicate_14
explicate_13
new_temp57
explicate_14
new_temp57
new_temp57
new_temp58
new_temp58
new_temp0
new_temp0
new_temp59
new_temp59
y
new_temp1
new_temp1
new_temp1
new_temp2
new_temp2
explicate_15
y
explicate_16
explicate_15
new_temp60
new_temp60
explicate_16
new_temp61
new_temp61
explicate_15
new_temp62
explicate_16
new_temp63
new_temp63
new_temp62
new_temp64
new_temp64
new_temp65
new_temp65
new_temp3
new_temp66
new_temp66
new_temp3
explicate_16
new_temp67
new_temp67
new_temp68
new_temp68
new_temp3
explicate_15
new_temp69
new_temp69
explicate_15
new_temp70
new_temp70
explicate_17
explicate_15
new_temp71
new_temp71
explicate_17
explicate_16
new_temp72
new_temp72
explicate_16
new_temp73
new_temp73
explicate_18
explicate_16
new_temp74
new_temp74
explicate_18
explicate_17
explicate_18
new_temp75
new_temp75
new_temp75
new_temp75
new_temp76
new_temp76
new_temp77
new_temp77
new_temp3
new_temp3
new_temp4
new_temp4
explicate_19
explicate_19
new_temp78
new_temp78
explicate_19
new_temp79
new_temp79
new_temp80
new_temp80
new_temp81
