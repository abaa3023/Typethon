Illegal character '!'
Syntax error at '='
Illegal character ':'
Illegal character '!'
Syntax error at '='
Syntax error at 'inner_loop_done'
Illegal character ':'
Illegal character ':'
Illegal character ':'
Illegal character ':'
Illegal character ':'
Illegal character ':'
Syntax error at 'inner_loop_done'
Illegal character ':'
------------------Tree with my parser--------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='y', ctx=Store())],
            value=Name(id='y_copy', ctx=Load())),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='z', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
--------------Original code----------------
x = 5
y = 10
z = 0

while int(x != 0):
    x = x + -1
    y_copy = y
    inner_loop_done = 0
    
    while int(y_copy != 0) and int(not inner_loop_done):
        y_copy = y_copy + -1
        if int(y_copy == 4):
            z = z + 1
            if int(x == 3):
                z = z + 1
                y = y + -1
                x = x + 1
                inner_loop_done = 1
            else:
                if int(x == 2):
                    z = z + 2
                else:
                    z = z + 3
                y = y + -1
                x = x + 1
                inner_loop_done = 1

    if int(not inner_loop_done):
        y = y_copy
        
print(z)


Module(
     body=[
          Assign(
               targets=[
                    Name(id='y', ctx=Store())],
               value=Name(id='y_copy', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='z', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='y', ctx=Store())],
               value=Name(id='y_copy', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='z', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
y = y_copy
print(z)
<ast.Name object at 0x7fee3ed530d0>

y = y_copy
print(z)
--------------Explicate code-------
y = y_copy
print(z)


--- explicated flattened python ---
y = y_copy
print(z)


--- x86 IR ---
movl  y_copy ,  y
call  print z


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'z': {'y'}, 'y': {'z'}, 'eax': set(), 'ecx': set(), 'edx': set(), 'edi': set(), 'ebx': set(), 'esi': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'z': 1, 'y': 2}
Spilled set:
 set()


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'z': 'eax', 'y': 'ecx'}
y_copy
