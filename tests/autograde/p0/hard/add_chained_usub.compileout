------------------CORRECT TREE--------------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=BinOp(
                left=Constant(value=20),
                op=Add(),
                right=UnaryOp(
                    op=USub(),
                    operand=UnaryOp(
                        op=USub(),
                        operand=UnaryOp(
                            op=USub(),
                            operand=UnaryOp(
                                op=USub(),
                                operand=Constant(value=30))))))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
------------------Tree with my parser--------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=BinOp(
                left=Constant(value=20),
                op=Add(),
                right=UnaryOp(
                    op=USub(),
                    operand=UnaryOp(
                        op=USub(),
                        operand=UnaryOp(
                            op=USub(),
                            operand=UnaryOp(
                                op=USub(),
                                operand=Constant(value=30))))))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
--------------Original code----------------
x = 20 + ----30
print(x)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=BinOp(
                    left=Constant(value=20),
                    op=Add(),
                    right=UnaryOp(
                         op=USub(),
                         operand=UnaryOp(
                              op=USub(),
                              operand=UnaryOp(
                                   op=USub(),
                                   operand=UnaryOp(
                                        op=USub(),
                                        operand=Constant(value=30))))))),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Constant(value=30))),
          Assign(
               targets=[
                    Name(id='new_temp1', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp0', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp2', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp1', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp3', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp2', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp4', ctx=Store())],
               value=BinOp(
                    left=Constant(value=20),
                    op=Add(),
                    right=Name(id='new_temp3', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Name(id='new_temp4', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
new_temp0 = -30
new_temp1 = -new_temp0
new_temp2 = -new_temp1
new_temp3 = -new_temp2
new_temp4 = 20 + new_temp3
x = new_temp4
print(x)
inject_int(-30)
inject_int(-project_int(new_temp0))
inject_int(-project_bool(new_temp0))
inject_int(-project_int(new_temp1))
inject_int(-project_bool(new_temp1))
inject_int(-project_int(new_temp2))
inject_int(-project_bool(new_temp2))
inject_big(add(project_big(explicate_5),project_big(explicate_6)))
inject_int(explicate_7+explicate_8)
<ast.Name object at 0x7f2842875ed0>

new_temp0 = inject_int(-30)
if(is_int(new_temp0)):
	new_temp1 = inject_int(-project_int(new_temp0))
else:
	if(is_bool(new_temp0)):
		new_temp1 = inject_int(-project_bool(new_temp0))
if(is_int(new_temp1)):
	new_temp2 = inject_int(-project_int(new_temp1))
else:
	if(is_bool(new_temp1)):
		new_temp2 = inject_int(-project_bool(new_temp1))
if(is_int(new_temp2)):
	new_temp3 = inject_int(-project_int(new_temp2))
else:
	if(is_bool(new_temp2)):
		new_temp3 = inject_int(-project_bool(new_temp2))
explicate_5 = inject_int(20)
explicate_6 = new_temp3
if(is_big(explicate_5)):
	if(is_big(explicate_6)):
		new_temp4 = inject_big(add(project_big(explicate_5),project_big(explicate_6)))
else:
	if(is_big(explicate_6)):
		error_pyobj(0)
	else:
		if(is_int(explicate_5)):
			explicate_7 = project_int(explicate_5)
		else:
			explicate_7 = project_bool(explicate_5)
		if(is_int(explicate_6)):
			explicate_8 = project_int(explicate_6)
		else:
			explicate_8 = project_bool(explicate_6)
		new_temp4 = inject_int(explicate_7+explicate_8)
x = new_temp4
print(x)
--------------Explicate code-------
new_temp0 = inject_int(-30)
if is_int(new_temp0):
    new_temp1 = inject_int(-project_int(new_temp0))
elif is_bool(new_temp0):
    new_temp1 = inject_int(-project_bool(new_temp0))
if is_int(new_temp1):
    new_temp2 = inject_int(-project_int(new_temp1))
elif is_bool(new_temp1):
    new_temp2 = inject_int(-project_bool(new_temp1))
if is_int(new_temp2):
    new_temp3 = inject_int(-project_int(new_temp2))
elif is_bool(new_temp2):
    new_temp3 = inject_int(-project_bool(new_temp2))
explicate_5 = inject_int(20)
explicate_6 = new_temp3
if is_big(explicate_5):
    if is_big(explicate_6):
        new_temp4 = inject_big(add(project_big(explicate_5), project_big(explicate_6)))
elif is_big(explicate_6):
    error_pyobj(0)
else:
    if is_int(explicate_5):
        explicate_7 = project_int(explicate_5)
    else:
        explicate_7 = project_bool(explicate_5)
    if is_int(explicate_6):
        explicate_8 = project_int(explicate_6)
    else:
        explicate_8 = project_bool(explicate_6)
    new_temp4 = inject_int(explicate_7 + explicate_8)
x = new_temp4
print(x)


--- explicated flattened python ---
new_temp9 = -30
new_temp10 = inject_int(new_temp9)
new_temp0 = new_temp10
new_temp11 = is_int(new_temp0)
if new_temp11:
    new_temp12 = project_int(new_temp0)
    new_temp13 = -new_temp12
    new_temp14 = inject_int(new_temp13)
    new_temp1 = new_temp14
else:
    new_temp15 = is_bool(new_temp0)
    if new_temp15:
        new_temp16 = project_bool(new_temp0)
        new_temp17 = -new_temp16
        new_temp18 = inject_int(new_temp17)
        new_temp1 = new_temp18
new_temp19 = is_int(new_temp1)
if new_temp19:
    new_temp20 = project_int(new_temp1)
    new_temp21 = -new_temp20
    new_temp22 = inject_int(new_temp21)
    new_temp2 = new_temp22
else:
    new_temp23 = is_bool(new_temp1)
    if new_temp23:
        new_temp24 = project_bool(new_temp1)
        new_temp25 = -new_temp24
        new_temp26 = inject_int(new_temp25)
        new_temp2 = new_temp26
new_temp27 = is_int(new_temp2)
if new_temp27:
    new_temp28 = project_int(new_temp2)
    new_temp29 = -new_temp28
    new_temp30 = inject_int(new_temp29)
    new_temp3 = new_temp30
else:
    new_temp31 = is_bool(new_temp2)
    if new_temp31:
        new_temp32 = project_bool(new_temp2)
        new_temp33 = -new_temp32
        new_temp34 = inject_int(new_temp33)
        new_temp3 = new_temp34
new_temp35 = inject_int(20)
explicate_5 = new_temp35
explicate_6 = new_temp3
new_temp36 = is_big(explicate_5)
if new_temp36:
    new_temp37 = is_big(explicate_6)
    if new_temp37:
        new_temp38 = project_big(explicate_5)
        new_temp39 = project_big(explicate_6)
        new_temp40 = add(new_temp38, new_temp39)
        new_temp41 = inject_big(new_temp40)
        new_temp4 = new_temp41
else:
    new_temp42 = is_big(explicate_6)
    if new_temp42:
        error_pyobj(0)
    else:
        new_temp43 = is_int(explicate_5)
        if new_temp43:
            new_temp44 = project_int(explicate_5)
            explicate_7 = new_temp44
        else:
            new_temp45 = project_bool(explicate_5)
            explicate_7 = new_temp45
        new_temp46 = is_int(explicate_6)
        if new_temp46:
            new_temp47 = project_int(explicate_6)
            explicate_8 = new_temp47
        else:
            new_temp48 = project_bool(explicate_6)
            explicate_8 = new_temp48
        new_temp49 = explicate_7 + explicate_8
        new_temp50 = inject_int(new_temp49)
        new_temp4 = new_temp50
x = new_temp4
print(x)


--- x86 IR ---
movl  30 ,  new_temp9
negl  new_temp9
call  inject_int new_temp9
movl  eax ,  new_temp10
movl  new_temp10 ,  new_temp0
call  is_int new_temp0
movl  eax ,  new_temp11
if1
cmp 0, new_temp11
je else1
then1
call  project_int new_temp0
movl  eax ,  new_temp12
movl  new_temp12 ,  new_temp13
negl  new_temp13
call  inject_int new_temp13
movl  eax ,  new_temp14
movl  new_temp14 ,  new_temp1
else1
call  is_bool new_temp0
movl  eax ,  new_temp15
if2
cmp 0, new_temp15
je end if2
then2
call  project_bool new_temp0
movl  eax ,  new_temp16
movl  new_temp16 ,  new_temp17
negl  new_temp17
call  inject_int new_temp17
movl  eax ,  new_temp18
movl  new_temp18 ,  new_temp1
end if2
end if1
call  is_int new_temp1
movl  eax ,  new_temp19
if2
cmp 0, new_temp19
je else2
then2
call  project_int new_temp1
movl  eax ,  new_temp20
movl  new_temp20 ,  new_temp21
negl  new_temp21
call  inject_int new_temp21
movl  eax ,  new_temp22
movl  new_temp22 ,  new_temp2
else2
call  is_bool new_temp1
movl  eax ,  new_temp23
if3
cmp 0, new_temp23
je end if3
then3
call  project_bool new_temp1
movl  eax ,  new_temp24
movl  new_temp24 ,  new_temp25
negl  new_temp25
call  inject_int new_temp25
movl  eax ,  new_temp26
movl  new_temp26 ,  new_temp2
end if3
end if2
call  is_int new_temp2
movl  eax ,  new_temp27
if3
cmp 0, new_temp27
je else3
then3
call  project_int new_temp2
movl  eax ,  new_temp28
movl  new_temp28 ,  new_temp29
negl  new_temp29
call  inject_int new_temp29
movl  eax ,  new_temp30
movl  new_temp30 ,  new_temp3
else3
call  is_bool new_temp2
movl  eax ,  new_temp31
if4
cmp 0, new_temp31
je end if4
then4
call  project_bool new_temp2
movl  eax ,  new_temp32
movl  new_temp32 ,  new_temp33
negl  new_temp33
call  inject_int new_temp33
movl  eax ,  new_temp34
movl  new_temp34 ,  new_temp3
end if4
end if3
call  inject_int 20
movl  eax ,  new_temp35
movl  new_temp35 ,  explicate_5
movl  new_temp3 ,  explicate_6
call  is_big explicate_5
movl  eax ,  new_temp36
if4
cmp 0, new_temp36
je else4
then4
call  is_big explicate_6
movl  eax ,  new_temp37
if5
cmp 0, new_temp37
je end if5
then5
call  project_big explicate_5
movl  eax ,  new_temp38
call  project_big explicate_6
movl  eax ,  new_temp39
call  add new_temp38,new_temp39
movl  eax ,  new_temp40
call  inject_big new_temp40
movl  eax ,  new_temp41
movl  new_temp41 ,  new_temp4
end if5
else4
call  is_big explicate_6
movl  eax ,  new_temp42
if5
cmp 0, new_temp42
je else5
then5
call  error_pyobj 0
else5
call  is_int explicate_5
movl  eax ,  new_temp43
if6
cmp 0, new_temp43
je else6
then6
call  project_int explicate_5
movl  eax ,  new_temp44
movl  new_temp44 ,  explicate_7
else6
call  project_bool explicate_5
movl  eax ,  new_temp45
movl  new_temp45 ,  explicate_7
end if6
call  is_int explicate_6
movl  eax ,  new_temp46
if7
cmp 0, new_temp46
je else7
then7
call  project_int explicate_6
movl  eax ,  new_temp47
movl  new_temp47 ,  explicate_8
else7
call  project_bool explicate_6
movl  eax ,  new_temp48
movl  new_temp48 ,  explicate_8
end if7
movl  explicate_7 ,  new_temp49
addl  explicate_8 ,  new_temp49
call  inject_int new_temp49
movl  eax ,  new_temp50
movl  new_temp50 ,  new_temp4
end if5
end if4
movl  new_temp4 ,  x
call  print x


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp1': {'new_temp11', 'new_temp4', 'new_temp23', 'new_temp10', 'eax', 'new_temp15', 'new_temp0', 'ecx', 'new_temp9', 'new_temp3', 'new_temp2', 'edx', 'new_temp19'}, 'new_temp2': {'new_temp14', 'edx', 'new_temp4', 'new_temp10', 'eax', 'new_temp15', 'new_temp27', 'ecx', 'new_temp3', 'new_temp16', 'new_temp1', 'new_temp11', 'new_temp18', 'new_temp12', 'new_temp31', 'new_temp13', 'new_temp0', 'new_temp9', 'new_temp23', 'new_temp17', 'new_temp19'}, 'new_temp4': {'new_temp32', 'ecx', 'new_temp37', 'new_temp29', 'new_temp3', 'new_temp35', 'new_temp30', 'new_temp19', 'new_temp1', 'new_temp12', 'new_temp31', 'new_temp9', 'new_temp34', 'new_temp42', 'explicate_5', 'edx', 'new_temp14', 'new_temp20', 'new_temp10', 'eax', 'new_temp22', 'new_temp15', 'new_temp27', 'new_temp2', 'new_temp16', 'new_temp36', 'new_temp26', 'new_temp11', 'new_temp18', 'new_temp28', 'new_temp25', 'new_temp13', 'new_temp0', 'explicate_6', 'new_temp23', 'new_temp24', 'new_temp17', 'new_temp21', 'new_temp33'}, 'new_temp3': {'new_temp14', 'edx', 'new_temp4', 'new_temp10', 'eax', 'new_temp22', 'new_temp15', 'new_temp27', 'ecx', 'new_temp24', 'new_temp20', 'new_temp35', 'new_temp16', 'new_temp26', 'new_temp1', 'new_temp11', 'new_temp18', 'new_temp12', 'new_temp21', 'new_temp25', 'new_temp31', 'new_temp13', 'new_temp0', 'new_temp9', 'new_temp23', 'explicate_5', 'new_temp2', 'new_temp17', 'new_temp19'}, 'new_temp9': {'new_temp1', 'new_temp4', 'new_temp3', 'new_temp2'}, 'eax': {'new_temp1', 'new_temp4', 'explicate_7', 'new_temp0', 'explicate_6', 'new_temp3', 'explicate_5', 'new_temp38', 'new_temp2'}, 'ecx': {'new_temp1', 'new_temp4', 'explicate_7', 'new_temp0', 'explicate_6', 'new_temp3', 'explicate_5', 'new_temp38', 'new_temp2'}, 'edx': {'new_temp1', 'new_temp4', 'explicate_7', 'new_temp0', 'explicate_6', 'new_temp3', 'explicate_5', 'new_temp38', 'new_temp2'}, 'new_temp10': {'new_temp1', 'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp0': {'new_temp1', 'new_temp11', 'new_temp4', 'eax', 'new_temp15', 'ecx', 'new_temp3', 'new_temp2', 'edx'}, 'new_temp11': {'new_temp1', 'new_temp4', 'new_temp3', 'new_temp2', 'new_temp0'}, 'edi': set(), 'ebx': set(), 'esi': set(), 'new_temp12': {'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp13': {'new_temp4', 'new_temp3', 'new_temp2'}, 'new_temp14': {'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp15': {'new_temp1', 'new_temp4', 'new_temp3', 'new_temp2', 'new_temp0'}, 'new_temp19': {'new_temp1', 'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp16': {'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp17': {'new_temp4', 'new_temp3', 'new_temp2'}, 'new_temp18': {'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp20': {'new_temp4', 'new_temp3'}, 'new_temp21': {'new_temp4', 'new_temp3'}, 'new_temp22': {'new_temp4', 'new_temp3'}, 'new_temp23': {'new_temp1', 'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp27': {'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp24': {'new_temp4', 'new_temp3'}, 'new_temp25': {'new_temp4', 'new_temp3'}, 'new_temp26': {'new_temp4', 'new_temp3'}, 'new_temp28': {'new_temp4'}, 'new_temp29': {'new_temp4'}, 'new_temp30': {'new_temp4'}, 'new_temp31': {'new_temp2', 'new_temp4', 'new_temp3'}, 'new_temp35': {'new_temp4', 'new_temp3'}, 'explicate_5': {'new_temp4', 'eax', 'new_temp43', 'ecx', 'new_temp37', 'new_temp42', 'explicate_6', 'new_temp3', 'new_temp36', 'edx'}, 'explicate_6': {'new_temp4', 'explicate_7', 'eax', 'new_temp43', 'ecx', 'new_temp37', 'new_temp42', 'new_temp44', 'new_temp46', 'explicate_5', 'new_temp38', 'new_temp36', 'edx', 'new_temp45'}, 'new_temp36': {'explicate_5', 'new_temp4', 'explicate_6'}, 'new_temp32': {'new_temp4'}, 'new_temp33': {'new_temp4'}, 'new_temp34': {'new_temp4'}, 'new_temp37': {'explicate_5', 'new_temp4', 'explicate_6'}, 'new_temp42': {'explicate_5', 'new_temp4', 'explicate_6'}, 'new_temp38': {'eax', 'new_temp39', 'ecx', 'explicate_6', 'edx'}, 'new_temp39': {'new_temp38'}, 'new_temp40': set(), 'new_temp41': set(), 'x': set(), 'new_temp43': {'explicate_5', 'explicate_6'}, 'new_temp44': {'explicate_6'}, 'explicate_7': {'new_temp48', 'eax', 'explicate_8', 'new_temp47', 'ecx', 'new_temp46', 'explicate_6', 'edx'}, 'new_temp45': {'explicate_6'}, 'new_temp46': {'explicate_7', 'explicate_6'}, 'new_temp47': {'explicate_7'}, 'explicate_8': {'new_temp49', 'explicate_7'}, 'new_temp48': {'explicate_7'}, 'new_temp49': {'explicate_8'}, 'new_temp50': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'new_temp2': 4, 'new_temp0': 5, 'new_temp1': 6, 'new_temp3': 7, 'new_temp4': 7, 'explicate_6': 4, 'explicate_5': 5, 'new_temp38': 5, 'explicate_7': 5, 'new_temp11': 1, 'new_temp15': 1, 'new_temp19': 1, 'new_temp23': 1, 'new_temp36': 1, 'new_temp46': 1, 'new_temp43': 1, 'new_temp10': 1, 'new_temp42': 1, 'new_temp9': 1, 'new_temp37': 1, 'new_temp17': 1, 'new_temp47': 1, 'new_temp14': 1, 'new_temp45': 1, 'new_temp13': 1, 'explicate_8': 1, 'new_temp31': 1, 'new_temp39': 1, 'new_temp48': 1, 'new_temp12': 1, 'new_temp18': 1, 'new_temp16': 1, 'new_temp44': 1, 'new_temp49': 2, 'new_temp27': 1, 'new_temp33': 1, 'new_temp21': 1, 'new_temp20': 1, 'new_temp26': 1, 'x': 1, 'new_temp30': 1, 'new_temp24': 1, 'new_temp35': 1, 'new_temp29': 1, 'new_temp41': 1, 'new_temp40': 1, 'new_temp34': 1, 'new_temp32': 1, 'new_temp50': 1, 'new_temp25': 1, 'new_temp28': 1, 'new_temp22': 1}
Spilled set:
 {'new_temp4', 'new_temp3'}


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'new_temp4': -4, 'new_temp3': -8, 'new_temp2': 'edi', 'new_temp0': 'ebx', 'new_temp1': 'esi', 'explicate_6': 'edi', 'explicate_5': 'ebx', 'new_temp38': 'ebx', 'explicate_7': 'ebx', 'new_temp11': 'eax', 'new_temp15': 'eax', 'new_temp19': 'eax', 'new_temp23': 'eax', 'new_temp36': 'eax', 'new_temp46': 'eax', 'new_temp43': 'eax', 'new_temp10': 'eax', 'new_temp42': 'eax', 'new_temp9': 'eax', 'new_temp37': 'eax', 'new_temp17': 'eax', 'new_temp47': 'eax', 'new_temp14': 'eax', 'new_temp45': 'eax', 'new_temp13': 'eax', 'explicate_8': 'eax', 'new_temp31': 'eax', 'new_temp39': 'eax', 'new_temp48': 'eax', 'new_temp12': 'eax', 'new_temp18': 'eax', 'new_temp16': 'eax', 'new_temp44': 'eax', 'new_temp49': 'ecx', 'new_temp27': 'eax', 'new_temp33': 'eax', 'new_temp21': 'eax', 'new_temp20': 'eax', 'new_temp26': 'eax', 'x': 'eax', 'new_temp30': 'eax', 'new_temp24': 'eax', 'new_temp35': 'eax', 'new_temp29': 'eax', 'new_temp41': 'eax', 'new_temp40': 'eax', 'new_temp34': 'eax', 'new_temp32': 'eax', 'new_temp50': 'eax', 'new_temp25': 'eax', 'new_temp28': 'eax', 'new_temp22': 'eax'}
new_temp9
new_temp9
new_temp9
new_temp10
new_temp10
new_temp0
new_temp0
new_temp11
new_temp11
new_temp0
new_temp12
new_temp12
new_temp13
new_temp13
new_temp13
new_temp14
new_temp14
new_temp1
new_temp0
new_temp15
new_temp15
new_temp0
new_temp16
new_temp16
new_temp17
new_temp17
new_temp17
new_temp18
new_temp18
new_temp1
new_temp1
new_temp19
new_temp19
new_temp1
new_temp20
new_temp20
new_temp21
new_temp21
new_temp21
new_temp22
new_temp22
new_temp2
new_temp1
new_temp23
new_temp23
new_temp1
new_temp24
new_temp24
new_temp25
new_temp25
new_temp25
new_temp26
new_temp26
new_temp2
new_temp2
new_temp27
new_temp27
new_temp2
new_temp28
new_temp28
new_temp29
new_temp29
new_temp29
new_temp30
new_temp30
new_temp2
new_temp31
new_temp31
new_temp2
new_temp32
new_temp32
new_temp33
new_temp33
new_temp33
new_temp34
new_temp34
new_temp35
new_temp35
explicate_5
explicate_6
explicate_5
new_temp36
new_temp36
explicate_6
new_temp37
new_temp37
explicate_5
new_temp38
explicate_6
new_temp39
new_temp39
new_temp38
new_temp40
new_temp40
new_temp41
new_temp41
explicate_6
new_temp42
new_temp42
explicate_5
new_temp43
new_temp43
explicate_5
new_temp44
new_temp44
explicate_7
explicate_5
new_temp45
new_temp45
explicate_7
explicate_6
new_temp46
new_temp46
explicate_6
new_temp47
new_temp47
explicate_8
explicate_6
new_temp48
new_temp48
explicate_8
explicate_7
new_temp49
explicate_8
new_temp49
new_temp49
new_temp50
new_temp50
x
x
