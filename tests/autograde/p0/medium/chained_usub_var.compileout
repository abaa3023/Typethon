--------------Original code----------------
x = 100
print(-----x)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Constant(value=100)),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         UnaryOp(
                              op=USub(),
                              operand=UnaryOp(
                                   op=USub(),
                                   operand=UnaryOp(
                                        op=USub(),
                                        operand=UnaryOp(
                                             op=USub(),
                                             operand=UnaryOp(
                                                  op=USub(),
                                                  operand=Name(id='x', ctx=Load()))))))],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Constant(value=100)),
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='x', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp1', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp0', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp2', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp1', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp3', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp2', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp4', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp3', ctx=Load()))),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='new_temp4', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
x = 100
new_temp0 = -x
new_temp1 = -new_temp0
new_temp2 = -new_temp1
new_temp3 = -new_temp2
new_temp4 = -new_temp3
print(new_temp4)
<ast.Constant object at 0x7f9db17f3e50>
inject_int(-project_int(x))
inject_int(-project_bool(x))
inject_int(-project_int(new_temp0))
inject_int(-project_bool(new_temp0))
inject_int(-project_int(new_temp1))
inject_int(-project_bool(new_temp1))
inject_int(-project_int(new_temp2))
inject_int(-project_bool(new_temp2))
inject_int(-project_int(new_temp3))
inject_int(-project_bool(new_temp3))

x = inject_int(100)
if(is_int(x)):
	new_temp0 = inject_int(-project_int(x))
else:
	if(is_bool(x)):
		new_temp0 = inject_int(-project_bool(x))
if(is_int(new_temp0)):
	new_temp1 = inject_int(-project_int(new_temp0))
else:
	if(is_bool(new_temp0)):
		new_temp1 = inject_int(-project_bool(new_temp0))
if(is_int(new_temp1)):
	new_temp2 = inject_int(-project_int(new_temp1))
else:
	if(is_bool(new_temp1)):
		new_temp2 = inject_int(-project_bool(new_temp1))
if(is_int(new_temp2)):
	new_temp3 = inject_int(-project_int(new_temp2))
else:
	if(is_bool(new_temp2)):
		new_temp3 = inject_int(-project_bool(new_temp2))
if(is_int(new_temp3)):
	new_temp4 = inject_int(-project_int(new_temp3))
else:
	if(is_bool(new_temp3)):
		new_temp4 = inject_int(-project_bool(new_temp3))
print(new_temp4)
--------------Explicate code-------
x = inject_int(100)
if is_int(x):
    new_temp0 = inject_int(-project_int(x))
elif is_bool(x):
    new_temp0 = inject_int(-project_bool(x))
if is_int(new_temp0):
    new_temp1 = inject_int(-project_int(new_temp0))
elif is_bool(new_temp0):
    new_temp1 = inject_int(-project_bool(new_temp0))
if is_int(new_temp1):
    new_temp2 = inject_int(-project_int(new_temp1))
elif is_bool(new_temp1):
    new_temp2 = inject_int(-project_bool(new_temp1))
if is_int(new_temp2):
    new_temp3 = inject_int(-project_int(new_temp2))
elif is_bool(new_temp2):
    new_temp3 = inject_int(-project_bool(new_temp2))
if is_int(new_temp3):
    new_temp4 = inject_int(-project_int(new_temp3))
elif is_bool(new_temp3):
    new_temp4 = inject_int(-project_bool(new_temp3))
print(new_temp4)


--- explicated flattened python ---
new_temp5 = inject_int(100)
x = new_temp5
new_temp6 = is_int(x)
if new_temp6:
    new_temp7 = project_int(x)
    new_temp8 = -new_temp7
    new_temp9 = inject_int(new_temp8)
    new_temp0 = new_temp9
else:
    new_temp10 = is_bool(x)
    if new_temp10:
        new_temp11 = project_bool(x)
        new_temp12 = -new_temp11
        new_temp13 = inject_int(new_temp12)
        new_temp0 = new_temp13
new_temp14 = is_int(new_temp0)
if new_temp14:
    new_temp15 = project_int(new_temp0)
    new_temp16 = -new_temp15
    new_temp17 = inject_int(new_temp16)
    new_temp1 = new_temp17
else:
    new_temp18 = is_bool(new_temp0)
    if new_temp18:
        new_temp19 = project_bool(new_temp0)
        new_temp20 = -new_temp19
        new_temp21 = inject_int(new_temp20)
        new_temp1 = new_temp21
new_temp22 = is_int(new_temp1)
if new_temp22:
    new_temp23 = project_int(new_temp1)
    new_temp24 = -new_temp23
    new_temp25 = inject_int(new_temp24)
    new_temp2 = new_temp25
else:
    new_temp26 = is_bool(new_temp1)
    if new_temp26:
        new_temp27 = project_bool(new_temp1)
        new_temp28 = -new_temp27
        new_temp29 = inject_int(new_temp28)
        new_temp2 = new_temp29
new_temp30 = is_int(new_temp2)
if new_temp30:
    new_temp31 = project_int(new_temp2)
    new_temp32 = -new_temp31
    new_temp33 = inject_int(new_temp32)
    new_temp3 = new_temp33
else:
    new_temp34 = is_bool(new_temp2)
    if new_temp34:
        new_temp35 = project_bool(new_temp2)
        new_temp36 = -new_temp35
        new_temp37 = inject_int(new_temp36)
        new_temp3 = new_temp37
new_temp38 = is_int(new_temp3)
if new_temp38:
    new_temp39 = project_int(new_temp3)
    new_temp40 = -new_temp39
    new_temp41 = inject_int(new_temp40)
    new_temp4 = new_temp41
else:
    new_temp42 = is_bool(new_temp3)
    if new_temp42:
        new_temp43 = project_bool(new_temp3)
        new_temp44 = -new_temp43
        new_temp45 = inject_int(new_temp44)
        new_temp4 = new_temp45
print(new_temp4)


--- x86 IR ---
call  inject_int 100
movl  eax ,  new_temp5
movl  new_temp5 ,  x
call  is_int x
movl  eax ,  new_temp6
if1
cmp 0, new_temp6
je else1
then1
call  project_int x
movl  eax ,  new_temp7
movl  new_temp7 ,  new_temp8
negl  new_temp8
call  inject_int new_temp8
movl  eax ,  new_temp9
movl  new_temp9 ,  new_temp0
else1
call  is_bool x
movl  eax ,  new_temp10
if2
cmp 0, new_temp10
je end if2
then2
call  project_bool x
movl  eax ,  new_temp11
movl  new_temp11 ,  new_temp12
negl  new_temp12
call  inject_int new_temp12
movl  eax ,  new_temp13
movl  new_temp13 ,  new_temp0
end if2
end if1
call  is_int new_temp0
movl  eax ,  new_temp14
if2
cmp 0, new_temp14
je else2
then2
call  project_int new_temp0
movl  eax ,  new_temp15
movl  new_temp15 ,  new_temp16
negl  new_temp16
call  inject_int new_temp16
movl  eax ,  new_temp17
movl  new_temp17 ,  new_temp1
else2
call  is_bool new_temp0
movl  eax ,  new_temp18
if3
cmp 0, new_temp18
je end if3
then3
call  project_bool new_temp0
movl  eax ,  new_temp19
movl  new_temp19 ,  new_temp20
negl  new_temp20
call  inject_int new_temp20
movl  eax ,  new_temp21
movl  new_temp21 ,  new_temp1
end if3
end if2
call  is_int new_temp1
movl  eax ,  new_temp22
if3
cmp 0, new_temp22
je else3
then3
call  project_int new_temp1
movl  eax ,  new_temp23
movl  new_temp23 ,  new_temp24
negl  new_temp24
call  inject_int new_temp24
movl  eax ,  new_temp25
movl  new_temp25 ,  new_temp2
else3
call  is_bool new_temp1
movl  eax ,  new_temp26
if4
cmp 0, new_temp26
je end if4
then4
call  project_bool new_temp1
movl  eax ,  new_temp27
movl  new_temp27 ,  new_temp28
negl  new_temp28
call  inject_int new_temp28
movl  eax ,  new_temp29
movl  new_temp29 ,  new_temp2
end if4
end if3
call  is_int new_temp2
movl  eax ,  new_temp30
if4
cmp 0, new_temp30
je else4
then4
call  project_int new_temp2
movl  eax ,  new_temp31
movl  new_temp31 ,  new_temp32
negl  new_temp32
call  inject_int new_temp32
movl  eax ,  new_temp33
movl  new_temp33 ,  new_temp3
else4
call  is_bool new_temp2
movl  eax ,  new_temp34
if5
cmp 0, new_temp34
je end if5
then5
call  project_bool new_temp2
movl  eax ,  new_temp35
movl  new_temp35 ,  new_temp36
negl  new_temp36
call  inject_int new_temp36
movl  eax ,  new_temp37
movl  new_temp37 ,  new_temp3
end if5
end if4
call  is_int new_temp3
movl  eax ,  new_temp38
if5
cmp 0, new_temp38
je else5
then5
call  project_int new_temp3
movl  eax ,  new_temp39
movl  new_temp39 ,  new_temp40
negl  new_temp40
call  inject_int new_temp40
movl  eax ,  new_temp41
movl  new_temp41 ,  new_temp4
else5
call  is_bool new_temp3
movl  eax ,  new_temp42
if6
cmp 0, new_temp42
je end if6
then6
call  project_bool new_temp3
movl  eax ,  new_temp43
movl  new_temp43 ,  new_temp44
negl  new_temp44
call  inject_int new_temp44
movl  eax ,  new_temp45
movl  new_temp45 ,  new_temp4
end if6
end if5
call  print new_temp4


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp2': {'new_temp3', 'x', 'new_temp10', 'ecx', 'new_temp21', 'new_temp26', 'new_temp9', 'new_temp11', 'new_temp15', 'new_temp16', 'new_temp0', 'new_temp7', 'new_temp8', 'new_temp12', 'eax', 'new_temp30', 'new_temp6', 'new_temp18', 'new_temp34', 'new_temp17', 'new_temp13', 'new_temp19', 'new_temp20', 'new_temp4', 'new_temp1', 'new_temp22', 'new_temp14', 'edx', 'new_temp5'}, 'eax': {'new_temp3', 'x', 'new_temp4', 'new_temp2', 'new_temp1', 'new_temp0'}, 'ecx': {'new_temp3', 'x', 'new_temp4', 'new_temp2', 'new_temp1', 'new_temp0'}, 'edx': {'new_temp3', 'x', 'new_temp4', 'new_temp2', 'new_temp1', 'new_temp0'}, 'new_temp3': {'new_temp10', 'new_temp21', 'new_temp26', 'new_temp9', 'new_temp23', 'new_temp11', 'new_temp15', 'new_temp0', 'new_temp8', 'new_temp12', 'eax', 'new_temp30', 'new_temp6', 'new_temp18', 'new_temp4', 'new_temp20', 'new_temp2', 'new_temp14', 'edx', 'new_temp5', 'x', 'new_temp42', 'ecx', 'new_temp27', 'new_temp29', 'new_temp25', 'new_temp16', 'new_temp28', 'new_temp7', 'new_temp34', 'new_temp17', 'new_temp13', 'new_temp19', 'new_temp38', 'new_temp24', 'new_temp1', 'new_temp22'}, 'new_temp1': {'new_temp3', 'x', 'new_temp10', 'ecx', 'new_temp26', 'new_temp9', 'new_temp11', 'new_temp0', 'new_temp7', 'new_temp8', 'new_temp12', 'eax', 'new_temp6', 'new_temp18', 'new_temp4', 'new_temp13', 'new_temp2', 'new_temp22', 'new_temp14', 'edx', 'new_temp5'}, 'new_temp0': {'new_temp3', 'x', 'new_temp10', 'ecx', 'eax', 'new_temp6', 'new_temp18', 'new_temp4', 'new_temp2', 'new_temp1', 'new_temp14', 'edx', 'new_temp5'}, 'new_temp4': {'new_temp3', 'new_temp10', 'new_temp21', 'new_temp26', 'new_temp9', 'new_temp23', 'new_temp11', 'new_temp15', 'new_temp33', 'new_temp0', 'new_temp8', 'new_temp12', 'eax', 'new_temp30', 'new_temp6', 'new_temp18', 'new_temp20', 'new_temp2', 'new_temp31', 'new_temp14', 'edx', 'new_temp5', 'x', 'new_temp42', 'ecx', 'new_temp27', 'new_temp29', 'new_temp32', 'new_temp25', 'new_temp16', 'new_temp28', 'new_temp7', 'new_temp36', 'new_temp34', 'new_temp17', 'new_temp13', 'new_temp19', 'new_temp38', 'new_temp37', 'new_temp24', 'new_temp1', 'new_temp22', 'new_temp35'}, 'new_temp5': {'new_temp2', 'new_temp3', 'new_temp1', 'new_temp0', 'new_temp4'}, 'x': {'new_temp3', 'new_temp10', 'ecx', 'eax', 'new_temp6', 'new_temp4', 'new_temp2', 'new_temp1', 'new_temp0', 'edx'}, 'new_temp6': {'new_temp2', 'new_temp3', 'x', 'new_temp1', 'new_temp0', 'new_temp4'}, 'edi': set(), 'ebx': set(), 'esi': set(), 'new_temp7': {'new_temp2', 'new_temp3', 'new_temp4', 'new_temp1'}, 'new_temp8': {'new_temp3', 'new_temp4', 'new_temp2', 'new_temp1'}, 'new_temp9': {'new_temp2', 'new_temp3', 'new_temp4', 'new_temp1'}, 'new_temp10': {'new_temp2', 'new_temp3', 'x', 'new_temp1', 'new_temp0', 'new_temp4'}, 'new_temp14': {'new_temp2', 'new_temp3', 'new_temp1', 'new_temp0', 'new_temp4'}, 'new_temp11': {'new_temp2', 'new_temp3', 'new_temp4', 'new_temp1'}, 'new_temp12': {'new_temp3', 'new_temp4', 'new_temp2', 'new_temp1'}, 'new_temp13': {'new_temp2', 'new_temp3', 'new_temp4', 'new_temp1'}, 'new_temp15': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp16': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp17': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp18': {'new_temp2', 'new_temp3', 'new_temp1', 'new_temp0', 'new_temp4'}, 'new_temp22': {'new_temp2', 'new_temp3', 'new_temp4', 'new_temp1'}, 'new_temp19': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp20': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp21': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp23': {'new_temp3', 'new_temp4'}, 'new_temp24': {'new_temp3', 'new_temp4'}, 'new_temp25': {'new_temp3', 'new_temp4'}, 'new_temp26': {'new_temp2', 'new_temp3', 'new_temp4', 'new_temp1'}, 'new_temp30': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp27': {'new_temp3', 'new_temp4'}, 'new_temp28': {'new_temp3', 'new_temp4'}, 'new_temp29': {'new_temp3', 'new_temp4'}, 'new_temp31': {'new_temp4'}, 'new_temp32': {'new_temp4'}, 'new_temp33': {'new_temp4'}, 'new_temp34': {'new_temp2', 'new_temp3', 'new_temp4'}, 'new_temp38': {'new_temp3', 'new_temp4'}, 'new_temp35': {'new_temp4'}, 'new_temp36': {'new_temp4'}, 'new_temp37': {'new_temp4'}, 'new_temp39': set(), 'new_temp40': set(), 'new_temp41': set(), 'new_temp42': {'new_temp3', 'new_temp4'}, 'new_temp43': set(), 'new_temp44': set(), 'new_temp45': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'new_temp1': 4, 'x': 5, 'new_temp2': 6, 'new_temp4': 7, 'new_temp0': 7, 'new_temp3': 7, 'new_temp6': 1, 'new_temp10': 1, 'new_temp22': 1, 'new_temp13': 1, 'new_temp7': 1, 'new_temp5': 1, 'new_temp14': 1, 'new_temp18': 1, 'new_temp12': 1, 'new_temp8': 1, 'new_temp11': 1, 'new_temp9': 1, 'new_temp26': 1, 'new_temp19': 1, 'new_temp20': 1, 'new_temp17': 1, 'new_temp34': 1, 'new_temp30': 1, 'new_temp16': 1, 'new_temp15': 1, 'new_temp21': 1, 'new_temp35': 1, 'new_temp31': 1, 'new_temp41': 1, 'new_temp45': 1, 'new_temp24': 1, 'new_temp44': 1, 'new_temp36': 1, 'new_temp39': 1, 'new_temp28': 1, 'new_temp25': 1, 'new_temp33': 1, 'new_temp40': 1, 'new_temp43': 1, 'new_temp32': 1, 'new_temp23': 1, 'new_temp37': 1, 'new_temp42': 1, 'new_temp38': 1, 'new_temp29': 1, 'new_temp27': 1}
Spilled set:
 {'new_temp3', 'new_temp4', 'new_temp0'}


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'new_temp3': -4, 'new_temp4': -8, 'new_temp0': -12, 'new_temp1': 'edi', 'x': 'ebx', 'new_temp2': 'esi', 'new_temp6': 'eax', 'new_temp10': 'eax', 'new_temp22': 'eax', 'new_temp13': 'eax', 'new_temp7': 'eax', 'new_temp5': 'eax', 'new_temp14': 'eax', 'new_temp18': 'eax', 'new_temp12': 'eax', 'new_temp8': 'eax', 'new_temp11': 'eax', 'new_temp9': 'eax', 'new_temp26': 'eax', 'new_temp19': 'eax', 'new_temp20': 'eax', 'new_temp17': 'eax', 'new_temp34': 'eax', 'new_temp30': 'eax', 'new_temp16': 'eax', 'new_temp15': 'eax', 'new_temp21': 'eax', 'new_temp35': 'eax', 'new_temp31': 'eax', 'new_temp41': 'eax', 'new_temp45': 'eax', 'new_temp24': 'eax', 'new_temp44': 'eax', 'new_temp36': 'eax', 'new_temp39': 'eax', 'new_temp28': 'eax', 'new_temp25': 'eax', 'new_temp33': 'eax', 'new_temp40': 'eax', 'new_temp43': 'eax', 'new_temp32': 'eax', 'new_temp23': 'eax', 'new_temp37': 'eax', 'new_temp42': 'eax', 'new_temp38': 'eax', 'new_temp29': 'eax', 'new_temp27': 'eax'}
new_temp5
new_temp5
x
x
new_temp6
new_temp6
x
new_temp7
new_temp7
new_temp8
new_temp8
new_temp8
new_temp9
new_temp9
x
new_temp10
new_temp10
x
new_temp11
new_temp11
new_temp12
new_temp12
new_temp12
new_temp13
new_temp13
new_temp14
new_temp14
new_temp15
new_temp15
new_temp16
new_temp16
new_temp16
new_temp17
new_temp17
new_temp1
new_temp18
new_temp18
new_temp19
new_temp19
new_temp20
new_temp20
new_temp20
new_temp21
new_temp21
new_temp1
new_temp1
new_temp22
new_temp22
new_temp1
new_temp23
new_temp23
new_temp24
new_temp24
new_temp24
new_temp25
new_temp25
new_temp2
new_temp1
new_temp26
new_temp26
new_temp1
new_temp27
new_temp27
new_temp28
new_temp28
new_temp28
new_temp29
new_temp29
new_temp2
new_temp2
new_temp30
new_temp30
new_temp2
new_temp31
new_temp31
new_temp32
new_temp32
new_temp32
new_temp33
new_temp33
new_temp2
new_temp34
new_temp34
new_temp2
new_temp35
new_temp35
new_temp36
new_temp36
new_temp36
new_temp37
new_temp37
new_temp38
new_temp38
new_temp39
new_temp39
new_temp40
new_temp40
new_temp40
new_temp41
new_temp41
new_temp42
new_temp42
new_temp43
new_temp43
new_temp44
new_temp44
new_temp44
new_temp45
new_temp45
