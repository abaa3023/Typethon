--------------Original code----------------
print(------2)
------------------Tree of original code--------------
Module(
    body=[
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    UnaryOp(
                        op=USub(),
                        operand=UnaryOp(
                            op=USub(),
                            operand=UnaryOp(
                                op=USub(),
                                operand=UnaryOp(
                                    op=USub(),
                                    operand=UnaryOp(
                                        op=USub(),
                                        operand=UnaryOp(
                                            op=USub(),
                                            operand=Constant(value=2)))))))],
                keywords=[]))],
    type_ignores=[])
------------------Tree after removing AnnAssign--------------
Module(
    body=[
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    UnaryOp(
                        op=USub(),
                        operand=UnaryOp(
                            op=USub(),
                            operand=UnaryOp(
                                op=USub(),
                                operand=UnaryOp(
                                    op=USub(),
                                    operand=UnaryOp(
                                        op=USub(),
                                        operand=UnaryOp(
                                            op=USub(),
                                            operand=Constant(value=2)))))))],
                keywords=[]))],
    type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Constant(value=2))),
          Assign(
               targets=[
                    Name(id='new_temp1', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp0', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp2', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp1', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp3', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp2', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp4', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp3', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='new_temp5', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Name(id='new_temp4', ctx=Load()))),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='new_temp5', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
new_temp0 = -2
new_temp1 = -new_temp0
new_temp2 = -new_temp1
new_temp3 = -new_temp2
new_temp4 = -new_temp3
new_temp5 = -new_temp4
print(new_temp5)
--------------Explicate code-------
new_temp0 = inject_int(-2)
new_temp1 = inject_int(-project_int(new_temp0))
new_temp2 = inject_int(-project_int(new_temp1))
new_temp3 = inject_int(-project_int(new_temp2))
new_temp4 = inject_int(-project_int(new_temp3))
new_temp5 = inject_int(-project_int(new_temp4))
print(new_temp5)


--- explicated flattened python ---
new_temp6 = -2
new_temp7 = inject_int(new_temp6)
new_temp0 = new_temp7
new_temp8 = project_int(new_temp0)
new_temp9 = -new_temp8
new_temp10 = inject_int(new_temp9)
new_temp1 = new_temp10
new_temp11 = project_int(new_temp1)
new_temp12 = -new_temp11
new_temp13 = inject_int(new_temp12)
new_temp2 = new_temp13
new_temp14 = project_int(new_temp2)
new_temp15 = -new_temp14
new_temp16 = inject_int(new_temp15)
new_temp3 = new_temp16
new_temp17 = project_int(new_temp3)
new_temp18 = -new_temp17
new_temp19 = inject_int(new_temp18)
new_temp4 = new_temp19
new_temp20 = project_int(new_temp4)
new_temp21 = -new_temp20
new_temp22 = inject_int(new_temp21)
new_temp5 = new_temp22
print(new_temp5)


--- x86 IR ---
movl  2 ,  new_temp6
negl  new_temp6
call  inject_int new_temp6
movl  eax ,  new_temp7
movl  new_temp7 ,  new_temp0
call  project_int new_temp0
movl  eax ,  new_temp8
movl  new_temp8 ,  new_temp9
negl  new_temp9
call  inject_int new_temp9
movl  eax ,  new_temp10
movl  new_temp10 ,  new_temp1
call  project_int new_temp1
movl  eax ,  new_temp11
movl  new_temp11 ,  new_temp12
negl  new_temp12
call  inject_int new_temp12
movl  eax ,  new_temp13
movl  new_temp13 ,  new_temp2
call  project_int new_temp2
movl  eax ,  new_temp14
movl  new_temp14 ,  new_temp15
negl  new_temp15
call  inject_int new_temp15
movl  eax ,  new_temp16
movl  new_temp16 ,  new_temp3
call  project_int new_temp3
movl  eax ,  new_temp17
movl  new_temp17 ,  new_temp18
negl  new_temp18
call  inject_int new_temp18
movl  eax ,  new_temp19
movl  new_temp19 ,  new_temp4
call  project_int new_temp4
movl  eax ,  new_temp20
movl  new_temp20 ,  new_temp21
negl  new_temp21
call  inject_int new_temp21
movl  eax ,  new_temp22
movl  new_temp22 ,  new_temp5
call  print new_temp5


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp6': set(), 'new_temp7': set(), 'new_temp0': set(), 'new_temp8': set(), 'new_temp9': set(), 'new_temp10': set(), 'new_temp1': set(), 'new_temp11': set(), 'new_temp12': set(), 'new_temp13': set(), 'new_temp2': set(), 'new_temp14': set(), 'new_temp15': set(), 'new_temp16': set(), 'new_temp3': set(), 'new_temp17': set(), 'new_temp18': set(), 'new_temp19': set(), 'new_temp4': set(), 'new_temp20': set(), 'new_temp21': set(), 'new_temp22': set(), 'new_temp5': set(), 'eax': set(), 'ecx': set(), 'edx': set(), 'edi': set(), 'ebx': set(), 'esi': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'new_temp14': 1, 'new_temp21': 1, 'new_temp17': 1, 'new_temp5': 1, 'new_temp10': 1, 'new_temp16': 1, 'new_temp22': 1, 'new_temp12': 1, 'new_temp4': 1, 'new_temp3': 1, 'new_temp11': 1, 'new_temp2': 1, 'new_temp15': 1, 'new_temp0': 1, 'new_temp18': 1, 'new_temp6': 1, 'new_temp8': 1, 'new_temp20': 1, 'new_temp1': 1, 'new_temp7': 1, 'new_temp19': 1, 'new_temp9': 1, 'new_temp13': 1}
Spilled set:
 set()


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'new_temp14': 'eax', 'new_temp21': 'eax', 'new_temp17': 'eax', 'new_temp5': 'eax', 'new_temp10': 'eax', 'new_temp16': 'eax', 'new_temp22': 'eax', 'new_temp12': 'eax', 'new_temp4': 'eax', 'new_temp3': 'eax', 'new_temp11': 'eax', 'new_temp2': 'eax', 'new_temp15': 'eax', 'new_temp0': 'eax', 'new_temp18': 'eax', 'new_temp6': 'eax', 'new_temp8': 'eax', 'new_temp20': 'eax', 'new_temp1': 'eax', 'new_temp7': 'eax', 'new_temp19': 'eax', 'new_temp9': 'eax', 'new_temp13': 'eax'}
new_temp6
new_temp6
new_temp6
ir.func_name =  inject_int
new_temp7
new_temp7
new_temp0
new_temp0
ir.func_name =  project_int
new_temp8
new_temp8
new_temp9
new_temp9
new_temp9
ir.func_name =  inject_int
new_temp10
new_temp10
new_temp1
new_temp1
ir.func_name =  project_int
new_temp11
new_temp11
new_temp12
new_temp12
new_temp12
ir.func_name =  inject_int
new_temp13
new_temp13
new_temp2
new_temp2
ir.func_name =  project_int
new_temp14
new_temp14
new_temp15
new_temp15
new_temp15
ir.func_name =  inject_int
new_temp16
new_temp16
new_temp3
new_temp3
ir.func_name =  project_int
new_temp17
new_temp17
new_temp18
new_temp18
new_temp18
ir.func_name =  inject_int
new_temp19
new_temp19
new_temp4
new_temp4
ir.func_name =  project_int
new_temp20
new_temp20
new_temp21
new_temp21
new_temp21
ir.func_name =  inject_int
new_temp22
new_temp22
new_temp5
new_temp5
ir.func_name =  print
