--------------Original code----------------
a = 1
b = 2
c = 3
x = [a, b, c]
print(x)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='a', ctx=Store())],
               value=Constant(value=1)),
          Assign(
               targets=[
                    Name(id='b', ctx=Store())],
               value=Constant(value=2)),
          Assign(
               targets=[
                    Name(id='c', ctx=Store())],
               value=Constant(value=3)),
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=List(
                    elts=[
                         Name(id='a', ctx=Load()),
                         Name(id='b', ctx=Load()),
                         Name(id='c', ctx=Load())],
                    ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='a', ctx=Store())],
               value=Constant(value=1)),
          Assign(
               targets=[
                    Name(id='b', ctx=Store())],
               value=Constant(value=2)),
          Assign(
               targets=[
                    Name(id='c', ctx=Store())],
               value=Constant(value=3)),
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=List(
                    elts=[
                         Name(id='a', ctx=Load()),
                         Name(id='b', ctx=Load()),
                         Name(id='c', ctx=Load())],
                    ctx=Load())),
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Name(id='new_temp0', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
a = 1
b = 2
c = 3
new_temp0 = [a, b, c]
x = new_temp0
print(x)
<ast.Constant object at 0x7f4c59268f70>
<ast.Constant object at 0x7f4c59268f10>
<ast.Constant object at 0x7f4c59268e80>
<ast.List object at 0x7f4c59268df0>
<ast.Name object at 0x7f4c59269210>

a = inject_int(1)
b = inject_int(2)
c = inject_int(3)
new_temp0 = inject_big(create_list(inject_int(3)))
set_subscript(new_temp0, inject_int(0), a)
set_subscript(new_temp0, inject_int(1), b)
set_subscript(new_temp0, inject_int(2), c)
x = new_temp0
print(x)
--------------Explicate code-------
a = inject_int(1)
b = inject_int(2)
c = inject_int(3)
new_temp0 = inject_big(create_list(inject_int(3)))
set_subscript(new_temp0, inject_int(0), a)
set_subscript(new_temp0, inject_int(1), b)
set_subscript(new_temp0, inject_int(2), c)
x = new_temp0
print(x)


--- explicated flattened python ---
new_temp1 = inject_int(1)
a = new_temp1
new_temp2 = inject_int(2)
b = new_temp2
new_temp3 = inject_int(3)
c = new_temp3
new_temp4 = inject_int(3)
new_temp5 = create_list(new_temp4)
new_temp6 = inject_big(new_temp5)
new_temp0 = new_temp6
new_temp7 = inject_int(0)
set_subscript(new_temp0, new_temp7, a)
new_temp8 = inject_int(1)
set_subscript(new_temp0, new_temp8, b)
new_temp9 = inject_int(2)
set_subscript(new_temp0, new_temp9, c)
x = new_temp0
print(x)


--- x86 IR ---
call  inject_int 1
movl  eax ,  new_temp1
movl  new_temp1 ,  a
call  inject_int 2
movl  eax ,  new_temp2
movl  new_temp2 ,  b
call  inject_int 3
movl  eax ,  new_temp3
movl  new_temp3 ,  c
call  inject_int 3
movl  eax ,  new_temp4
call  create_list new_temp4
movl  eax ,  new_temp5
call  inject_big new_temp5
movl  eax ,  new_temp6
movl  new_temp6 ,  new_temp0
call  inject_int 0
movl  eax ,  new_temp7
call  set_subscript new_temp0,new_temp7,a
call  inject_int 1
movl  eax ,  new_temp8
call  set_subscript new_temp0,new_temp8,b
call  inject_int 2
movl  eax ,  new_temp9
call  set_subscript new_temp0,new_temp9,c
movl  new_temp0 ,  x
call  print x


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp1': set(), 'a': {'b', 'new_temp0', 'c', 'new_temp7', 'new_temp3', 'new_temp2', 'new_temp5', 'new_temp4', 'new_temp6', 'ecx', 'eax', 'edx'}, 'eax': {'new_temp0', 'a', 'c', 'b'}, 'ecx': {'new_temp0', 'a', 'c', 'b'}, 'edx': {'new_temp0', 'a', 'c', 'b'}, 'new_temp2': {'a'}, 'b': {'new_temp0', 'c', 'new_temp7', 'new_temp3', 'new_temp5', 'new_temp4', 'new_temp6', 'ecx', 'new_temp8', 'a', 'eax', 'edx'}, 'new_temp3': {'a', 'b'}, 'c': {'b', 'new_temp0', 'new_temp7', 'new_temp5', 'new_temp4', 'new_temp6', 'ecx', 'new_temp8', 'new_temp9', 'a', 'eax', 'edx'}, 'new_temp4': {'a', 'c', 'b'}, 'new_temp5': {'a', 'c', 'b'}, 'new_temp6': {'a', 'c', 'b'}, 'new_temp0': {'b', 'c', 'new_temp8', 'eax', 'ecx', 'new_temp9', 'a', 'new_temp7', 'edx'}, 'new_temp7': {'new_temp0', 'a', 'c', 'b'}, 'new_temp8': {'new_temp0', 'c', 'b'}, 'new_temp9': {'new_temp0', 'c'}, 'x': set(), 'edi': set(), 'ebx': set(), 'esi': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'a': 4, 'c': 5, 'new_temp0': 6, 'b': 7, 'new_temp7': 1, 'new_temp9': 1, 'new_temp8': 1, 'new_temp6': 1, 'new_temp4': 1, 'new_temp5': 1, 'new_temp3': 1, 'new_temp2': 1, 'x': 1, 'new_temp1': 1}
Spilled set:
 {'b'}


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'b': -4, 'a': 'edi', 'c': 'ebx', 'new_temp0': 'esi', 'new_temp7': 'eax', 'new_temp9': 'eax', 'new_temp8': 'eax', 'new_temp6': 'eax', 'new_temp4': 'eax', 'new_temp5': 'eax', 'new_temp3': 'eax', 'new_temp2': 'eax', 'x': 'eax', 'new_temp1': 'eax'}
new_temp1
new_temp1
a
new_temp2
new_temp2
new_temp3
new_temp3
c
new_temp4
new_temp4
new_temp5
new_temp5
new_temp6
new_temp6
new_temp0
new_temp7
a
new_temp7
new_temp0
new_temp8
new_temp8
new_temp0
new_temp9
c
new_temp9
new_temp0
new_temp0
x
x
