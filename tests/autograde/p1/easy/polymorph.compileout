Syntax error at 'else'
Illegal character '['
Illegal character ','
Illegal character ','
Illegal character ']'
------------------CORRECT TREE--------------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=IfExp(
                test=Call(
                    func=Name(id='eval', ctx=Load()),
                    args=[
                        Call(
                            func=Name(id='input', ctx=Load()),
                            args=[],
                            keywords=[])],
                    keywords=[]),
                body=Constant(value=42),
                orelse=List(
                    elts=[
                        Constant(value=1),
                        Constant(value=2),
                        Constant(value=3)],
                    ctx=Load()))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
------------------Tree with my parser--------------
Module(
    body=[
        Constant(value=1),
        Constant(value=2),
        Constant(value=3),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
--------------Original code----------------
x = 42 if eval(input()) else [1,2,3]
print(x)

Module(
     body=[
          Constant(value=1),
          Constant(value=2),
          Constant(value=3),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
print(x)

print(x)
--------------Explicate code-------
print(x)


--- explicated flattened python ---
print(x)


--- x86 IR ---
call  print x


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'eax': set(), 'ecx': set(), 'edx': set(), 'edi': set(), 'ebx': set(), 'esi': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6}
Spilled set:
 set()


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {}
x
