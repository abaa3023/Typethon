--------------Original code----------------
a = [1, 2, 3]
b = [4, 5, 6]
print(a)
print(b)
tmp = a
a = b
b = tmp
print(a)
print(b)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='a', ctx=Store())],
               value=List(
                    elts=[
                         Constant(value=1),
                         Constant(value=2),
                         Constant(value=3)],
                    ctx=Load())),
          Assign(
               targets=[
                    Name(id='b', ctx=Store())],
               value=List(
                    elts=[
                         Constant(value=4),
                         Constant(value=5),
                         Constant(value=6)],
                    ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='a', ctx=Load())],
                    keywords=[])),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='b', ctx=Load())],
                    keywords=[])),
          Assign(
               targets=[
                    Name(id='tmp', ctx=Store())],
               value=Name(id='a', ctx=Load())),
          Assign(
               targets=[
                    Name(id='a', ctx=Store())],
               value=Name(id='b', ctx=Load())),
          Assign(
               targets=[
                    Name(id='b', ctx=Store())],
               value=Name(id='tmp', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='a', ctx=Load())],
                    keywords=[])),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='b', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=List(
                    elts=[
                         Constant(value=1),
                         Constant(value=2),
                         Constant(value=3)],
                    ctx=Load())),
          Assign(
               targets=[
                    Name(id='a', ctx=Store())],
               value=Name(id='new_temp0', ctx=Load())),
          Assign(
               targets=[
                    Name(id='new_temp1', ctx=Store())],
               value=List(
                    elts=[
                         Constant(value=4),
                         Constant(value=5),
                         Constant(value=6)],
                    ctx=Load())),
          Assign(
               targets=[
                    Name(id='b', ctx=Store())],
               value=Name(id='new_temp1', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='a', ctx=Load())],
                    keywords=[])),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='b', ctx=Load())],
                    keywords=[])),
          Assign(
               targets=[
                    Name(id='tmp', ctx=Store())],
               value=Name(id='a', ctx=Load())),
          Assign(
               targets=[
                    Name(id='a', ctx=Store())],
               value=Name(id='b', ctx=Load())),
          Assign(
               targets=[
                    Name(id='b', ctx=Store())],
               value=Name(id='tmp', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='a', ctx=Load())],
                    keywords=[])),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='b', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
new_temp0 = [1, 2, 3]
a = new_temp0
new_temp1 = [4, 5, 6]
b = new_temp1
print(a)
print(b)
tmp = a
a = b
b = tmp
print(a)
print(b)
<ast.List object at 0x7f1c52c655d0>
<ast.Name object at 0x7f1c52c64bb0>
<ast.List object at 0x7f1c52c654e0>
<ast.Name object at 0x7f1c52c649d0>
<ast.Name object at 0x7f1c52c651e0>
<ast.Name object at 0x7f1c52c65150>
<ast.Name object at 0x7f1c52c650c0>

new_temp0 = inject_big(create_list(inject_int(3)))
set_subscript(new_temp0, inject_int(0), inject_int(1))
set_subscript(new_temp0, inject_int(1), inject_int(2))
set_subscript(new_temp0, inject_int(2), inject_int(3))
a = new_temp0
new_temp1 = inject_big(create_list(inject_int(3)))
set_subscript(new_temp1, inject_int(0), inject_int(4))
set_subscript(new_temp1, inject_int(1), inject_int(5))
set_subscript(new_temp1, inject_int(2), inject_int(6))
b = new_temp1
print(a)
print(b)
tmp = a
a = b
b = tmp
print(a)
print(b)
--------------Explicate code-------
new_temp0 = inject_big(create_list(inject_int(3)))
set_subscript(new_temp0, inject_int(0), inject_int(1))
set_subscript(new_temp0, inject_int(1), inject_int(2))
set_subscript(new_temp0, inject_int(2), inject_int(3))
a = new_temp0
new_temp1 = inject_big(create_list(inject_int(3)))
set_subscript(new_temp1, inject_int(0), inject_int(4))
set_subscript(new_temp1, inject_int(1), inject_int(5))
set_subscript(new_temp1, inject_int(2), inject_int(6))
b = new_temp1
print(a)
print(b)
tmp = a
a = b
b = tmp
print(a)
print(b)


--- explicated flattened python ---
new_temp2 = inject_int(3)
new_temp3 = create_list(new_temp2)
new_temp4 = inject_big(new_temp3)
new_temp0 = new_temp4
new_temp5 = inject_int(0)
new_temp6 = inject_int(1)
set_subscript(new_temp0, new_temp5, new_temp6)
new_temp7 = inject_int(1)
new_temp8 = inject_int(2)
set_subscript(new_temp0, new_temp7, new_temp8)
new_temp9 = inject_int(2)
new_temp10 = inject_int(3)
set_subscript(new_temp0, new_temp9, new_temp10)
a = new_temp0
new_temp11 = inject_int(3)
new_temp12 = create_list(new_temp11)
new_temp13 = inject_big(new_temp12)
new_temp1 = new_temp13
new_temp14 = inject_int(0)
new_temp15 = inject_int(4)
set_subscript(new_temp1, new_temp14, new_temp15)
new_temp16 = inject_int(1)
new_temp17 = inject_int(5)
set_subscript(new_temp1, new_temp16, new_temp17)
new_temp18 = inject_int(2)
new_temp19 = inject_int(6)
set_subscript(new_temp1, new_temp18, new_temp19)
b = new_temp1
print(a)
print(b)
tmp = a
a = b
b = tmp
print(a)
print(b)


--- x86 IR ---
call  inject_int 3
movl  eax ,  new_temp2
call  create_list new_temp2
movl  eax ,  new_temp3
call  inject_big new_temp3
movl  eax ,  new_temp4
movl  new_temp4 ,  new_temp0
call  inject_int 0
movl  eax ,  new_temp5
call  inject_int 1
movl  eax ,  new_temp6
call  set_subscript new_temp0,new_temp5,new_temp6
call  inject_int 1
movl  eax ,  new_temp7
call  inject_int 2
movl  eax ,  new_temp8
call  set_subscript new_temp0,new_temp7,new_temp8
call  inject_int 2
movl  eax ,  new_temp9
call  inject_int 3
movl  eax ,  new_temp10
call  set_subscript new_temp0,new_temp9,new_temp10
movl  new_temp0 ,  a
call  inject_int 3
movl  eax ,  new_temp11
call  create_list new_temp11
movl  eax ,  new_temp12
call  inject_big new_temp12
movl  eax ,  new_temp13
movl  new_temp13 ,  new_temp1
call  inject_int 0
movl  eax ,  new_temp14
call  inject_int 4
movl  eax ,  new_temp15
call  set_subscript new_temp1,new_temp14,new_temp15
call  inject_int 1
movl  eax ,  new_temp16
call  inject_int 5
movl  eax ,  new_temp17
call  set_subscript new_temp1,new_temp16,new_temp17
call  inject_int 2
movl  eax ,  new_temp18
call  inject_int 6
movl  eax ,  new_temp19
call  set_subscript new_temp1,new_temp18,new_temp19
movl  new_temp1 ,  b
call  print a
call  print b
movl  a ,  tmp
movl  b ,  a
movl  tmp ,  b
call  print a
call  print b


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp2': set(), 'new_temp3': set(), 'new_temp4': set(), 'new_temp0': {'new_temp10', 'eax', 'edx', 'new_temp8', 'new_temp6', 'new_temp7', 'new_temp5', 'new_temp9', 'ecx'}, 'eax': {'b', 'new_temp7', 'new_temp0', 'new_temp5', 'a', 'new_temp9', 'new_temp18', 'new_temp16', 'new_temp14', 'new_temp1'}, 'ecx': {'b', 'new_temp7', 'new_temp0', 'new_temp5', 'a', 'new_temp9', 'new_temp18', 'new_temp16', 'new_temp14', 'new_temp1'}, 'edx': {'b', 'new_temp7', 'new_temp0', 'new_temp5', 'a', 'new_temp9', 'new_temp18', 'new_temp16', 'new_temp14', 'new_temp1'}, 'new_temp5': {'eax', 'edx', 'new_temp6', 'new_temp0', 'ecx'}, 'new_temp6': {'new_temp0', 'new_temp5'}, 'new_temp7': {'eax', 'edx', 'new_temp8', 'new_temp0', 'ecx'}, 'new_temp8': {'new_temp7', 'new_temp0'}, 'new_temp9': {'new_temp10', 'eax', 'edx', 'new_temp0', 'ecx'}, 'new_temp10': {'new_temp0', 'new_temp9'}, 'a': {'tmp', 'eax', 'edx', 'b', 'new_temp12', 'new_temp14', 'new_temp17', 'new_temp15', 'new_temp19', 'new_temp13', 'new_temp11', 'new_temp18', 'new_temp16', 'ecx', 'new_temp1'}, 'new_temp11': {'a'}, 'new_temp12': {'a'}, 'new_temp13': {'a'}, 'new_temp1': {'eax', 'edx', 'new_temp14', 'a', 'new_temp17', 'new_temp15', 'new_temp19', 'new_temp18', 'new_temp16', 'ecx'}, 'new_temp14': {'eax', 'edx', 'ecx', 'a', 'new_temp1', 'new_temp15'}, 'new_temp15': {'new_temp14', 'new_temp1', 'a'}, 'new_temp16': {'eax', 'edx', 'new_temp17', 'ecx', 'a', 'new_temp1'}, 'new_temp17': {'new_temp16', 'a', 'new_temp1'}, 'new_temp18': {'new_temp19', 'eax', 'edx', 'ecx', 'a', 'new_temp1'}, 'new_temp19': {'a', 'new_temp1', 'new_temp18'}, 'b': {'tmp', 'eax', 'edx', 'a', 'ecx'}, 'tmp': {'b', 'a'}, 'edi': set(), 'ebx': set(), 'esi': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'new_temp1': 4, 'new_temp14': 5, 'a': 6, 'new_temp16': 5, 'new_temp18': 5, 'b': 4, 'new_temp19': 1, 'new_temp15': 1, 'new_temp5': 4, 'new_temp0': 5, 'new_temp9': 4, 'new_temp7': 4, 'new_temp17': 1, 'tmp': 1, 'new_temp6': 1, 'new_temp8': 1, 'new_temp10': 1, 'new_temp11': 1, 'new_temp13': 1, 'new_temp12': 1, 'new_temp3': 1, 'new_temp2': 1, 'new_temp4': 1}
Spilled set:
 set()


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'new_temp1': 'edi', 'new_temp14': 'ebx', 'a': 'esi', 'new_temp16': 'ebx', 'new_temp18': 'ebx', 'b': 'edi', 'new_temp19': 'eax', 'new_temp15': 'eax', 'new_temp5': 'edi', 'new_temp0': 'ebx', 'new_temp9': 'edi', 'new_temp7': 'edi', 'new_temp17': 'eax', 'tmp': 'eax', 'new_temp6': 'eax', 'new_temp8': 'eax', 'new_temp10': 'eax', 'new_temp11': 'eax', 'new_temp13': 'eax', 'new_temp12': 'eax', 'new_temp3': 'eax', 'new_temp2': 'eax', 'new_temp4': 'eax'}
new_temp2
new_temp2
new_temp3
new_temp3
new_temp4
new_temp4
new_temp0
new_temp5
new_temp6
new_temp6
new_temp5
new_temp0
new_temp7
new_temp8
new_temp8
new_temp7
new_temp0
new_temp9
new_temp10
new_temp10
new_temp9
new_temp0
new_temp0
a
new_temp11
new_temp11
new_temp12
new_temp12
new_temp13
new_temp13
new_temp1
new_temp14
new_temp15
new_temp15
new_temp14
new_temp1
new_temp16
new_temp17
new_temp17
new_temp16
new_temp1
new_temp18
new_temp19
new_temp19
new_temp18
new_temp1
new_temp1
b
a
b
a
tmp
b
a
tmp
b
a
b
