------------------CORRECT TREE--------------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=List(
                elts=[
                    BinOp(
                        left=Constant(value=1),
                        op=Add(),
                        right=Constant(value=2)),
                    BinOp(
                        left=Constant(value=3),
                        op=Add(),
                        right=Constant(value=4))],
                ctx=Load())),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
------------------Tree with my parser--------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=List(
                elts=[
                    BinOp(
                        left=Constant(value=1),
                        op=Add(),
                        right=Constant(value=2)),
                    BinOp(
                        left=Constant(value=3),
                        op=Add(),
                        right=Constant(value=4))],
                ctx=Load())),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='x', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
--------------Original code----------------
x = [1 + 2, 3 + 4]
print(x)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=List(
                    elts=[
                         BinOp(
                              left=Constant(value=1),
                              op=Add(),
                              right=Constant(value=2)),
                         BinOp(
                              left=Constant(value=3),
                              op=Add(),
                              right=Constant(value=4))],
                    ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=BinOp(
                    left=Constant(value=1),
                    op=Add(),
                    right=Constant(value=2))),
          Assign(
               targets=[
                    Name(id='new_temp1', ctx=Store())],
               value=BinOp(
                    left=Constant(value=3),
                    op=Add(),
                    right=Constant(value=4))),
          Assign(
               targets=[
                    Name(id='new_temp2', ctx=Store())],
               value=List(
                    elts=[
                         Name(id='new_temp0', ctx=Load()),
                         Name(id='new_temp1', ctx=Load())],
                    ctx=Load())),
          Assign(
               targets=[
                    Name(id='x', ctx=Store())],
               value=Name(id='new_temp2', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='x', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
new_temp0 = 1 + 2
new_temp1 = 3 + 4
new_temp2 = [new_temp0, new_temp1]
x = new_temp2
print(x)
inject_big(add(project_big(explicate_3),project_big(explicate_4)))
inject_int(explicate_5+explicate_6)
inject_big(add(project_big(explicate_7),project_big(explicate_8)))
inject_int(explicate_9+explicate_10)
<ast.List object at 0x7f1a6f12f850>
<ast.Name object at 0x7f1a6f148280>

explicate_3 = inject_int(1)
explicate_4 = inject_int(2)
if(is_big(explicate_3)):
	if(is_big(explicate_4)):
		new_temp0 = inject_big(add(project_big(explicate_3),project_big(explicate_4)))
else:
	if(is_big(explicate_4)):
		error_pyobj(0)
	else:
		if(is_int(explicate_3)):
			explicate_5 = project_int(explicate_3)
		else:
			explicate_5 = project_bool(explicate_3)
		if(is_int(explicate_4)):
			explicate_6 = project_int(explicate_4)
		else:
			explicate_6 = project_bool(explicate_4)
		new_temp0 = inject_int(explicate_5+explicate_6)
explicate_7 = inject_int(3)
explicate_8 = inject_int(4)
if(is_big(explicate_7)):
	if(is_big(explicate_8)):
		new_temp1 = inject_big(add(project_big(explicate_7),project_big(explicate_8)))
else:
	if(is_big(explicate_8)):
		error_pyobj(0)
	else:
		if(is_int(explicate_7)):
			explicate_9 = project_int(explicate_7)
		else:
			explicate_9 = project_bool(explicate_7)
		if(is_int(explicate_8)):
			explicate_10 = project_int(explicate_8)
		else:
			explicate_10 = project_bool(explicate_8)
		new_temp1 = inject_int(explicate_9+explicate_10)
new_temp2 = inject_big(create_list(inject_int(2)))
set_subscript(new_temp2, inject_int(0), new_temp0)
set_subscript(new_temp2, inject_int(1), new_temp1)
x = new_temp2
print(x)
--------------Explicate code-------
explicate_3 = inject_int(1)
explicate_4 = inject_int(2)
if is_big(explicate_3):
    if is_big(explicate_4):
        new_temp0 = inject_big(add(project_big(explicate_3), project_big(explicate_4)))
elif is_big(explicate_4):
    error_pyobj(0)
else:
    if is_int(explicate_3):
        explicate_5 = project_int(explicate_3)
    else:
        explicate_5 = project_bool(explicate_3)
    if is_int(explicate_4):
        explicate_6 = project_int(explicate_4)
    else:
        explicate_6 = project_bool(explicate_4)
    new_temp0 = inject_int(explicate_5 + explicate_6)
explicate_7 = inject_int(3)
explicate_8 = inject_int(4)
if is_big(explicate_7):
    if is_big(explicate_8):
        new_temp1 = inject_big(add(project_big(explicate_7), project_big(explicate_8)))
elif is_big(explicate_8):
    error_pyobj(0)
else:
    if is_int(explicate_7):
        explicate_9 = project_int(explicate_7)
    else:
        explicate_9 = project_bool(explicate_7)
    if is_int(explicate_8):
        explicate_10 = project_int(explicate_8)
    else:
        explicate_10 = project_bool(explicate_8)
    new_temp1 = inject_int(explicate_9 + explicate_10)
new_temp2 = inject_big(create_list(inject_int(2)))
set_subscript(new_temp2, inject_int(0), new_temp0)
set_subscript(new_temp2, inject_int(1), new_temp1)
x = new_temp2
print(x)


--- explicated flattened python ---
new_temp11 = inject_int(1)
explicate_3 = new_temp11
new_temp12 = inject_int(2)
explicate_4 = new_temp12
new_temp13 = is_big(explicate_3)
if new_temp13:
    new_temp14 = is_big(explicate_4)
    if new_temp14:
        new_temp15 = project_big(explicate_3)
        new_temp16 = project_big(explicate_4)
        new_temp17 = add(new_temp15, new_temp16)
        new_temp18 = inject_big(new_temp17)
        new_temp0 = new_temp18
else:
    new_temp19 = is_big(explicate_4)
    if new_temp19:
        error_pyobj(0)
    else:
        new_temp20 = is_int(explicate_3)
        if new_temp20:
            new_temp21 = project_int(explicate_3)
            explicate_5 = new_temp21
        else:
            new_temp22 = project_bool(explicate_3)
            explicate_5 = new_temp22
        new_temp23 = is_int(explicate_4)
        if new_temp23:
            new_temp24 = project_int(explicate_4)
            explicate_6 = new_temp24
        else:
            new_temp25 = project_bool(explicate_4)
            explicate_6 = new_temp25
        new_temp26 = explicate_5 + explicate_6
        new_temp27 = inject_int(new_temp26)
        new_temp0 = new_temp27
new_temp28 = inject_int(3)
explicate_7 = new_temp28
new_temp29 = inject_int(4)
explicate_8 = new_temp29
new_temp30 = is_big(explicate_7)
if new_temp30:
    new_temp31 = is_big(explicate_8)
    if new_temp31:
        new_temp32 = project_big(explicate_7)
        new_temp33 = project_big(explicate_8)
        new_temp34 = add(new_temp32, new_temp33)
        new_temp35 = inject_big(new_temp34)
        new_temp1 = new_temp35
else:
    new_temp36 = is_big(explicate_8)
    if new_temp36:
        error_pyobj(0)
    else:
        new_temp37 = is_int(explicate_7)
        if new_temp37:
            new_temp38 = project_int(explicate_7)
            explicate_9 = new_temp38
        else:
            new_temp39 = project_bool(explicate_7)
            explicate_9 = new_temp39
        new_temp40 = is_int(explicate_8)
        if new_temp40:
            new_temp41 = project_int(explicate_8)
            explicate_10 = new_temp41
        else:
            new_temp42 = project_bool(explicate_8)
            explicate_10 = new_temp42
        new_temp43 = explicate_9 + explicate_10
        new_temp44 = inject_int(new_temp43)
        new_temp1 = new_temp44
new_temp45 = inject_int(2)
new_temp46 = create_list(new_temp45)
new_temp47 = inject_big(new_temp46)
new_temp2 = new_temp47
new_temp48 = inject_int(0)
set_subscript(new_temp2, new_temp48, new_temp0)
new_temp49 = inject_int(1)
set_subscript(new_temp2, new_temp49, new_temp1)
x = new_temp2
print(x)


--- x86 IR ---
call  inject_int 1
movl  eax ,  new_temp11
movl  new_temp11 ,  explicate_3
call  inject_int 2
movl  eax ,  new_temp12
movl  new_temp12 ,  explicate_4
call  is_big explicate_3
movl  eax ,  new_temp13
if1
cmp 0, new_temp13
je else1
then1
call  is_big explicate_4
movl  eax ,  new_temp14
if2
cmp 0, new_temp14
je end if2
then2
call  project_big explicate_3
movl  eax ,  new_temp15
call  project_big explicate_4
movl  eax ,  new_temp16
call  add new_temp15,new_temp16
movl  eax ,  new_temp17
call  inject_big new_temp17
movl  eax ,  new_temp18
movl  new_temp18 ,  new_temp0
end if2
else1
call  is_big explicate_4
movl  eax ,  new_temp19
if2
cmp 0, new_temp19
je else2
then2
call  error_pyobj 0
else2
call  is_int explicate_3
movl  eax ,  new_temp20
if3
cmp 0, new_temp20
je else3
then3
call  project_int explicate_3
movl  eax ,  new_temp21
movl  new_temp21 ,  explicate_5
else3
call  project_bool explicate_3
movl  eax ,  new_temp22
movl  new_temp22 ,  explicate_5
end if3
call  is_int explicate_4
movl  eax ,  new_temp23
if4
cmp 0, new_temp23
je else4
then4
call  project_int explicate_4
movl  eax ,  new_temp24
movl  new_temp24 ,  explicate_6
else4
call  project_bool explicate_4
movl  eax ,  new_temp25
movl  new_temp25 ,  explicate_6
end if4
movl  explicate_5 ,  new_temp26
addl  explicate_6 ,  new_temp26
call  inject_int new_temp26
movl  eax ,  new_temp27
movl  new_temp27 ,  new_temp0
end if2
end if1
call  inject_int 3
movl  eax ,  new_temp28
movl  new_temp28 ,  explicate_7
call  inject_int 4
movl  eax ,  new_temp29
movl  new_temp29 ,  explicate_8
call  is_big explicate_7
movl  eax ,  new_temp30
if2
cmp 0, new_temp30
je else2
then2
call  is_big explicate_8
movl  eax ,  new_temp31
if3
cmp 0, new_temp31
je end if3
then3
call  project_big explicate_7
movl  eax ,  new_temp32
call  project_big explicate_8
movl  eax ,  new_temp33
call  add new_temp32,new_temp33
movl  eax ,  new_temp34
call  inject_big new_temp34
movl  eax ,  new_temp35
movl  new_temp35 ,  new_temp1
end if3
else2
call  is_big explicate_8
movl  eax ,  new_temp36
if3
cmp 0, new_temp36
je else3
then3
call  error_pyobj 0
else3
call  is_int explicate_7
movl  eax ,  new_temp37
if4
cmp 0, new_temp37
je else4
then4
call  project_int explicate_7
movl  eax ,  new_temp38
movl  new_temp38 ,  explicate_9
else4
call  project_bool explicate_7
movl  eax ,  new_temp39
movl  new_temp39 ,  explicate_9
end if4
call  is_int explicate_8
movl  eax ,  new_temp40
if5
cmp 0, new_temp40
je else5
then5
call  project_int explicate_8
movl  eax ,  new_temp41
movl  new_temp41 ,  explicate_10
else5
call  project_bool explicate_8
movl  eax ,  new_temp42
movl  new_temp42 ,  explicate_10
end if5
movl  explicate_9 ,  new_temp43
addl  explicate_10 ,  new_temp43
call  inject_int new_temp43
movl  eax ,  new_temp44
movl  new_temp44 ,  new_temp1
end if3
end if2
call  inject_int 2
movl  eax ,  new_temp45
call  create_list new_temp45
movl  eax ,  new_temp46
call  inject_big new_temp46
movl  eax ,  new_temp47
movl  new_temp47 ,  new_temp2
call  inject_int 0
movl  eax ,  new_temp48
call  set_subscript new_temp2,new_temp48,new_temp0
call  inject_int 1
movl  eax ,  new_temp49
call  set_subscript new_temp2,new_temp49,new_temp1
movl  new_temp2 ,  x
call  print x


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp1': {'eax', 'edx', 'explicate_7', 'ecx', 'new_temp24', 'new_temp26', 'new_temp22', 'new_temp23', 'new_temp16', 'new_temp15', 'explicate_3', 'new_temp19', 'new_temp25', 'new_temp30', 'explicate_5', 'new_temp29', 'new_temp20', 'new_temp11', 'new_temp45', 'new_temp21', 'new_temp13', 'new_temp46', 'new_temp14', 'new_temp31', 'new_temp48', 'new_temp18', 'explicate_4', 'new_temp49', 'new_temp36', 'new_temp17', 'new_temp12', 'new_temp0', 'new_temp2', 'new_temp27', 'new_temp47', 'explicate_6', 'explicate_8', 'new_temp28'}, 'eax': {'new_temp32', 'explicate_7', 'explicate_4', 'explicate_9', 'explicate_5', 'new_temp1', 'new_temp0', 'explicate_8', 'new_temp2', 'explicate_3', 'new_temp15'}, 'ecx': {'new_temp32', 'explicate_7', 'explicate_4', 'explicate_9', 'explicate_5', 'new_temp1', 'new_temp0', 'explicate_8', 'new_temp2', 'explicate_3', 'new_temp15'}, 'edx': {'new_temp32', 'explicate_7', 'explicate_4', 'explicate_9', 'explicate_5', 'new_temp1', 'new_temp0', 'explicate_8', 'new_temp2', 'explicate_3', 'new_temp15'}, 'new_temp0': {'eax', 'edx', 'explicate_7', 'new_temp40', 'explicate_9', 'ecx', 'new_temp44', 'explicate_3', 'new_temp19', 'new_temp33', 'new_temp30', 'new_temp41', 'new_temp29', 'new_temp43', 'new_temp11', 'new_temp45', 'new_temp32', 'new_temp13', 'new_temp46', 'new_temp1', 'new_temp39', 'new_temp14', 'new_temp31', 'new_temp48', 'new_temp37', 'explicate_4', 'new_temp42', 'new_temp34', 'new_temp36', 'new_temp38', 'new_temp12', 'new_temp2', 'new_temp47', 'new_temp35', 'explicate_8', 'explicate_10', 'new_temp28'}, 'new_temp11': {'new_temp1', 'new_temp0'}, 'explicate_3': {'eax', 'edx', 'explicate_4', 'new_temp13', 'ecx', 'new_temp1', 'new_temp0', 'new_temp12', 'new_temp14', 'new_temp20', 'new_temp19'}, 'new_temp12': {'explicate_3', 'new_temp1', 'new_temp0'}, 'explicate_4': {'eax', 'edx', 'new_temp21', 'new_temp13', 'ecx', 'explicate_5', 'new_temp1', 'new_temp22', 'new_temp0', 'new_temp14', 'new_temp23', 'new_temp20', 'explicate_3', 'new_temp15', 'new_temp19'}, 'new_temp13': {'explicate_3', 'explicate_4', 'new_temp1', 'new_temp0'}, 'edi': set(), 'ebx': set(), 'esi': set(), 'new_temp14': {'explicate_3', 'explicate_4', 'new_temp1', 'new_temp0'}, 'new_temp19': {'explicate_3', 'explicate_4', 'new_temp1', 'new_temp0'}, 'new_temp15': {'new_temp16', 'eax', 'explicate_4', 'edx', 'ecx', 'new_temp1'}, 'new_temp16': {'new_temp15', 'new_temp1'}, 'new_temp17': {'new_temp1'}, 'new_temp18': {'new_temp1'}, 'new_temp28': {'new_temp1', 'new_temp0'}, 'explicate_7': {'eax', 'edx', 'new_temp30', 'ecx', 'new_temp1', 'new_temp36', 'new_temp0', 'new_temp29', 'new_temp31', 'explicate_8', 'new_temp37'}, 'new_temp29': {'explicate_7', 'new_temp1', 'new_temp0'}, 'explicate_8': {'new_temp32', 'explicate_7', 'eax', 'edx', 'new_temp40', 'new_temp30', 'explicate_9', 'ecx', 'new_temp1', 'new_temp36', 'new_temp0', 'new_temp38', 'new_temp39', 'new_temp31', 'new_temp37'}, 'new_temp30': {'explicate_7', 'explicate_8', 'new_temp1', 'new_temp0'}, 'new_temp20': {'explicate_3', 'explicate_4', 'new_temp1'}, 'new_temp31': {'explicate_7', 'explicate_8', 'new_temp1', 'new_temp0'}, 'new_temp36': {'explicate_7', 'explicate_8', 'new_temp1', 'new_temp0'}, 'new_temp21': {'explicate_4', 'new_temp1'}, 'explicate_5': {'eax', 'explicate_4', 'edx', 'ecx', 'new_temp24', 'new_temp1', 'new_temp23', 'explicate_6', 'new_temp25'}, 'new_temp22': {'explicate_4', 'new_temp1'}, 'new_temp32': {'eax', 'edx', 'new_temp33', 'explicate_8', 'ecx', 'new_temp0'}, 'new_temp33': {'new_temp32', 'new_temp0'}, 'new_temp34': {'new_temp0'}, 'new_temp35': {'new_temp0'}, 'new_temp45': {'new_temp1', 'new_temp0'}, 'new_temp46': {'new_temp1', 'new_temp0'}, 'new_temp47': {'new_temp1', 'new_temp0'}, 'new_temp2': {'eax', 'edx', 'new_temp49', 'ecx', 'new_temp1', 'new_temp0', 'new_temp48'}, 'new_temp48': {'new_temp2', 'new_temp1', 'new_temp0'}, 'new_temp49': {'new_temp2', 'new_temp1'}, 'x': set(), 'new_temp37': {'explicate_7', 'explicate_8', 'new_temp0'}, 'new_temp23': {'explicate_4', 'explicate_5', 'new_temp1'}, 'new_temp38': {'explicate_8', 'new_temp0'}, 'explicate_9': {'eax', 'edx', 'new_temp40', 'ecx', 'new_temp42', 'new_temp0', 'new_temp41', 'explicate_8', 'explicate_10'}, 'new_temp39': {'explicate_8', 'new_temp0'}, 'new_temp24': {'explicate_5', 'new_temp1'}, 'explicate_6': {'explicate_5', 'new_temp1', 'new_temp26'}, 'new_temp25': {'explicate_5', 'new_temp1'}, 'new_temp40': {'explicate_9', 'explicate_8', 'new_temp0'}, 'new_temp26': {'new_temp1', 'explicate_6'}, 'new_temp27': {'new_temp1'}, 'new_temp41': {'explicate_9', 'new_temp0'}, 'explicate_10': {'explicate_9', 'new_temp43', 'new_temp0'}, 'new_temp42': {'explicate_9', 'new_temp0'}, 'new_temp43': {'explicate_10', 'new_temp0'}, 'new_temp44': {'new_temp0'}}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'explicate_8': 4, 'new_temp0': 5, 'new_temp1': 6, 'explicate_7': 7, 'new_temp2': 4, 'explicate_4': 4, 'explicate_3': 7, 'new_temp15': 5, 'new_temp32': 6, 'explicate_5': 5, 'explicate_9': 6, 'new_temp36': 1, 'new_temp48': 1, 'new_temp31': 1, 'new_temp14': 1, 'new_temp13': 1, 'new_temp30': 1, 'new_temp19': 1, 'new_temp23': 1, 'new_temp40': 1, 'new_temp28': 1, 'new_temp45': 1, 'explicate_10': 1, 'new_temp11': 1, 'explicate_6': 1, 'new_temp47': 1, 'new_temp43': 2, 'new_temp20': 1, 'new_temp38': 1, 'new_temp29': 1, 'new_temp12': 1, 'new_temp41': 1, 'new_temp42': 1, 'new_temp49': 1, 'new_temp33': 1, 'new_temp25': 1, 'new_temp37': 1, 'new_temp39': 1, 'new_temp16': 1, 'new_temp22': 1, 'new_temp26': 2, 'new_temp24': 1, 'new_temp46': 1, 'new_temp21': 1, 'new_temp18': 1, 'new_temp35': 1, 'new_temp27': 1, 'new_temp17': 1, 'new_temp44': 1, 'new_temp34': 1, 'x': 1}
Spilled set:
 {'explicate_3', 'explicate_7'}


--------------Spilling----------------
unspillable_set
 set()
continue_looping
 False



Homes for CFG0:  {'explicate_3': -4, 'explicate_7': -8, 'explicate_8': 'edi', 'new_temp0': 'ebx', 'new_temp1': 'esi', 'new_temp2': 'edi', 'explicate_4': 'edi', 'new_temp15': 'ebx', 'new_temp32': 'esi', 'explicate_5': 'ebx', 'explicate_9': 'esi', 'new_temp36': 'eax', 'new_temp48': 'eax', 'new_temp31': 'eax', 'new_temp14': 'eax', 'new_temp13': 'eax', 'new_temp30': 'eax', 'new_temp19': 'eax', 'new_temp23': 'eax', 'new_temp40': 'eax', 'new_temp28': 'eax', 'new_temp45': 'eax', 'explicate_10': 'eax', 'new_temp11': 'eax', 'explicate_6': 'eax', 'new_temp47': 'eax', 'new_temp43': 'ecx', 'new_temp20': 'eax', 'new_temp38': 'eax', 'new_temp29': 'eax', 'new_temp12': 'eax', 'new_temp41': 'eax', 'new_temp42': 'eax', 'new_temp49': 'eax', 'new_temp33': 'eax', 'new_temp25': 'eax', 'new_temp37': 'eax', 'new_temp39': 'eax', 'new_temp16': 'eax', 'new_temp22': 'eax', 'new_temp26': 'ecx', 'new_temp24': 'eax', 'new_temp46': 'eax', 'new_temp21': 'eax', 'new_temp18': 'eax', 'new_temp35': 'eax', 'new_temp27': 'eax', 'new_temp17': 'eax', 'new_temp44': 'eax', 'new_temp34': 'eax', 'x': 'eax'}
new_temp11
new_temp11
new_temp12
new_temp12
explicate_4
new_temp13
new_temp13
explicate_4
new_temp14
new_temp14
new_temp15
explicate_4
new_temp16
new_temp16
new_temp15
new_temp17
new_temp17
new_temp18
new_temp18
new_temp0
explicate_4
new_temp19
new_temp19
new_temp20
new_temp20
new_temp21
new_temp21
explicate_5
new_temp22
new_temp22
explicate_5
explicate_4
new_temp23
new_temp23
explicate_4
new_temp24
new_temp24
explicate_6
explicate_4
new_temp25
new_temp25
explicate_6
explicate_5
new_temp26
explicate_6
new_temp26
new_temp26
new_temp27
new_temp27
new_temp0
new_temp28
new_temp28
new_temp29
new_temp29
explicate_8
new_temp30
new_temp30
explicate_8
new_temp31
new_temp31
new_temp32
explicate_8
new_temp33
new_temp33
new_temp32
new_temp34
new_temp34
new_temp35
new_temp35
new_temp1
explicate_8
new_temp36
new_temp36
new_temp37
new_temp37
new_temp38
new_temp38
explicate_9
new_temp39
new_temp39
explicate_9
explicate_8
new_temp40
new_temp40
explicate_8
new_temp41
new_temp41
explicate_10
explicate_8
new_temp42
new_temp42
explicate_10
explicate_9
new_temp43
explicate_10
new_temp43
new_temp43
new_temp44
new_temp44
new_temp1
new_temp45
new_temp45
new_temp46
new_temp46
new_temp47
new_temp47
new_temp2
new_temp48
new_temp0
new_temp48
new_temp2
new_temp49
new_temp1
new_temp49
new_temp2
new_temp2
x
x
