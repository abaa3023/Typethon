Syntax error at 'len'
------------------CORRECT TREE--------------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='x', ctx=Store())],
            value=List(
                elts=[
                    Constant(value=15),
                    Constant(value=25),
                    Constant(value=35),
                    Constant(value=45)],
                ctx=Load())),
        Assign(
            targets=[
                Name(id='len', ctx=Store())],
            value=Constant(value=4)),
        Assign(
            targets=[
                Name(id='sum', ctx=Store())],
            value=Constant(value=0)),
        Assign(
            targets=[
                Name(id='idx', ctx=Store())],
            value=Constant(value=0)),
        While(
            test=Compare(
                left=Name(id='len', ctx=Load()),
                ops=[
                    NotEq()],
                comparators=[
                    Constant(value=0)]),
            body=[
                Assign(
                    targets=[
                        Name(id='sum', ctx=Store())],
                    value=BinOp(
                        left=Name(id='sum', ctx=Load()),
                        op=Add(),
                        right=Subscript(
                            value=Name(id='x', ctx=Load()),
                            slice=Name(id='idx', ctx=Load()),
                            ctx=Load()))),
                Assign(
                    targets=[
                        Name(id='len', ctx=Store())],
                    value=BinOp(
                        left=Name(id='len', ctx=Load()),
                        op=Add(),
                        right=UnaryOp(
                            op=USub(),
                            operand=Constant(value=1)))),
                Assign(
                    targets=[
                        Name(id='idx', ctx=Store())],
                    value=BinOp(
                        left=Name(id='idx', ctx=Load()),
                        op=Add(),
                        right=Constant(value=1)))],
            orelse=[]),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='sum', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
------------------Tree with my parser--------------
Module(
    body=[
        Assign(
            targets=[
                Name(id='sum', ctx=Store())],
            value=BinOp(
                left=Name(id='sum', ctx=Load()),
                op=Add(),
                right=Subscript(
                    value=Name(id='x', ctx=Load()),
                    slice=Name(id='idx', ctx=Load()),
                    ctx=Load()))),
        Assign(
            targets=[
                Name(id='len', ctx=Store())],
            value=BinOp(
                left=Name(id='len', ctx=Load()),
                op=Add(),
                right=UnaryOp(
                    op=USub(),
                    operand=Constant(value=1)))),
        Assign(
            targets=[
                Name(id='idx', ctx=Store())],
            value=BinOp(
                left=Name(id='idx', ctx=Load()),
                op=Add(),
                right=Constant(value=1))),
        Expr(
            value=Call(
                func=Name(id='print', ctx=Load()),
                args=[
                    Name(id='sum', ctx=Load())],
                keywords=[]))],
    type_ignores=[])
--------------Original code----------------
x = [15, 25, 35, 45]
len = 4
sum = 0
idx = 0

while len != 0:
  sum = sum + x[idx]
  len = len + -1
  idx = idx + 1

print(sum)
Module(
     body=[
          Assign(
               targets=[
                    Name(id='sum', ctx=Store())],
               value=BinOp(
                    left=Name(id='sum', ctx=Load()),
                    op=Add(),
                    right=Subscript(
                         value=Name(id='x', ctx=Load()),
                         slice=Name(id='idx', ctx=Load()),
                         ctx=Load()))),
          Assign(
               targets=[
                    Name(id='len', ctx=Store())],
               value=BinOp(
                    left=Name(id='len', ctx=Load()),
                    op=Add(),
                    right=UnaryOp(
                         op=USub(),
                         operand=Constant(value=1)))),
          Assign(
               targets=[
                    Name(id='idx', ctx=Store())],
               value=BinOp(
                    left=Name(id='idx', ctx=Load()),
                    op=Add(),
                    right=Constant(value=1))),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='sum', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
Module(
     body=[
          Assign(
               targets=[
                    Name(id='new_temp0', ctx=Store())],
               value=Subscript(
                    value=Name(id='x', ctx=Load()),
                    slice=Name(id='idx', ctx=Load()),
                    ctx=Load())),
          Assign(
               targets=[
                    Name(id='new_temp1', ctx=Store())],
               value=BinOp(
                    left=Name(id='sum', ctx=Load()),
                    op=Add(),
                    right=Name(id='new_temp0', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='sum', ctx=Store())],
               value=Name(id='new_temp1', ctx=Load())),
          Assign(
               targets=[
                    Name(id='new_temp2', ctx=Store())],
               value=UnaryOp(
                    op=USub(),
                    operand=Constant(value=1))),
          Assign(
               targets=[
                    Name(id='new_temp3', ctx=Store())],
               value=BinOp(
                    left=Name(id='len', ctx=Load()),
                    op=Add(),
                    right=Name(id='new_temp2', ctx=Load()))),
          Assign(
               targets=[
                    Name(id='len', ctx=Store())],
               value=Name(id='new_temp3', ctx=Load())),
          Assign(
               targets=[
                    Name(id='new_temp4', ctx=Store())],
               value=BinOp(
                    left=Name(id='idx', ctx=Load()),
                    op=Add(),
                    right=Constant(value=1))),
          Assign(
               targets=[
                    Name(id='idx', ctx=Store())],
               value=Name(id='new_temp4', ctx=Load())),
          Expr(
               value=Call(
                    func=Name(id='print', ctx=Load()),
                    args=[
                         Name(id='sum', ctx=Load())],
                    keywords=[]))],
     type_ignores=[])
--------------Code after flattening-------
new_temp0 = x[idx]
new_temp1 = sum + new_temp0
sum = new_temp1
new_temp2 = -1
new_temp3 = len + new_temp2
len = new_temp3
new_temp4 = idx + 1
idx = new_temp4
print(sum)
<ast.Subscript object at 0x7f6530d8c670>
inject_big(add(project_big(explicate_5),project_big(explicate_6)))
inject_int(explicate_7+explicate_8)
<ast.Name object at 0x7f6530d8cb80>
inject_int(-1)
inject_big(add(project_big(explicate_9),project_big(explicate_10)))
inject_int(explicate_11+explicate_12)
<ast.Name object at 0x7f6530d8ce20>
inject_big(add(project_big(explicate_13),project_big(explicate_14)))
inject_int(explicate_15+explicate_16)
<ast.Name object at 0x7f6530d8d000>

new_temp0 = get_subscript(x, idx)
explicate_5 = sum
explicate_6 = new_temp0
if(is_big(explicate_5)):
	if(is_big(explicate_6)):
		new_temp1 = inject_big(add(project_big(explicate_5),project_big(explicate_6)))
else:
	if(is_big(explicate_6)):
		error_pyobj(0)
	else:
		if(is_int(explicate_5)):
			explicate_7 = project_int(explicate_5)
		else:
			explicate_7 = project_bool(explicate_5)
		if(is_int(explicate_6)):
			explicate_8 = project_int(explicate_6)
		else:
			explicate_8 = project_bool(explicate_6)
		new_temp1 = inject_int(explicate_7+explicate_8)
sum = new_temp1
new_temp2 = inject_int(-1)
explicate_9 = len
explicate_10 = new_temp2
if(is_big(explicate_9)):
	if(is_big(explicate_10)):
		new_temp3 = inject_big(add(project_big(explicate_9),project_big(explicate_10)))
else:
	if(is_big(explicate_10)):
		error_pyobj(0)
	else:
		if(is_int(explicate_9)):
			explicate_11 = project_int(explicate_9)
		else:
			explicate_11 = project_bool(explicate_9)
		if(is_int(explicate_10)):
			explicate_12 = project_int(explicate_10)
		else:
			explicate_12 = project_bool(explicate_10)
		new_temp3 = inject_int(explicate_11+explicate_12)
len = new_temp3
explicate_13 = idx
explicate_14 = inject_int(1)
if(is_big(explicate_13)):
	if(is_big(explicate_14)):
		new_temp4 = inject_big(add(project_big(explicate_13),project_big(explicate_14)))
else:
	if(is_big(explicate_14)):
		error_pyobj(0)
	else:
		if(is_int(explicate_13)):
			explicate_15 = project_int(explicate_13)
		else:
			explicate_15 = project_bool(explicate_13)
		if(is_int(explicate_14)):
			explicate_16 = project_int(explicate_14)
		else:
			explicate_16 = project_bool(explicate_14)
		new_temp4 = inject_int(explicate_15+explicate_16)
idx = new_temp4
print(sum)
--------------Explicate code-------
new_temp0 = get_subscript(x, idx)
explicate_5 = sum
explicate_6 = new_temp0
if is_big(explicate_5):
    if is_big(explicate_6):
        new_temp1 = inject_big(add(project_big(explicate_5), project_big(explicate_6)))
elif is_big(explicate_6):
    error_pyobj(0)
else:
    if is_int(explicate_5):
        explicate_7 = project_int(explicate_5)
    else:
        explicate_7 = project_bool(explicate_5)
    if is_int(explicate_6):
        explicate_8 = project_int(explicate_6)
    else:
        explicate_8 = project_bool(explicate_6)
    new_temp1 = inject_int(explicate_7 + explicate_8)
sum = new_temp1
new_temp2 = inject_int(-1)
explicate_9 = len
explicate_10 = new_temp2
if is_big(explicate_9):
    if is_big(explicate_10):
        new_temp3 = inject_big(add(project_big(explicate_9), project_big(explicate_10)))
elif is_big(explicate_10):
    error_pyobj(0)
else:
    if is_int(explicate_9):
        explicate_11 = project_int(explicate_9)
    else:
        explicate_11 = project_bool(explicate_9)
    if is_int(explicate_10):
        explicate_12 = project_int(explicate_10)
    else:
        explicate_12 = project_bool(explicate_10)
    new_temp3 = inject_int(explicate_11 + explicate_12)
len = new_temp3
explicate_13 = idx
explicate_14 = inject_int(1)
if is_big(explicate_13):
    if is_big(explicate_14):
        new_temp4 = inject_big(add(project_big(explicate_13), project_big(explicate_14)))
elif is_big(explicate_14):
    error_pyobj(0)
else:
    if is_int(explicate_13):
        explicate_15 = project_int(explicate_13)
    else:
        explicate_15 = project_bool(explicate_13)
    if is_int(explicate_14):
        explicate_16 = project_int(explicate_14)
    else:
        explicate_16 = project_bool(explicate_14)
    new_temp4 = inject_int(explicate_15 + explicate_16)
idx = new_temp4
print(sum)


--- explicated flattened python ---
new_temp17 = get_subscript(x, idx)
new_temp0 = new_temp17
explicate_5 = sum
explicate_6 = new_temp0
new_temp18 = is_big(explicate_5)
if new_temp18:
    new_temp19 = is_big(explicate_6)
    if new_temp19:
        new_temp20 = project_big(explicate_5)
        new_temp21 = project_big(explicate_6)
        new_temp22 = add(new_temp20, new_temp21)
        new_temp23 = inject_big(new_temp22)
        new_temp1 = new_temp23
else:
    new_temp24 = is_big(explicate_6)
    if new_temp24:
        error_pyobj(0)
    else:
        new_temp25 = is_int(explicate_5)
        if new_temp25:
            new_temp26 = project_int(explicate_5)
            explicate_7 = new_temp26
        else:
            new_temp27 = project_bool(explicate_5)
            explicate_7 = new_temp27
        new_temp28 = is_int(explicate_6)
        if new_temp28:
            new_temp29 = project_int(explicate_6)
            explicate_8 = new_temp29
        else:
            new_temp30 = project_bool(explicate_6)
            explicate_8 = new_temp30
        new_temp31 = explicate_7 + explicate_8
        new_temp32 = inject_int(new_temp31)
        new_temp1 = new_temp32
sum = new_temp1
new_temp33 = -1
new_temp34 = inject_int(new_temp33)
new_temp2 = new_temp34
explicate_9 = len
explicate_10 = new_temp2
new_temp35 = is_big(explicate_9)
if new_temp35:
    new_temp36 = is_big(explicate_10)
    if new_temp36:
        new_temp37 = project_big(explicate_9)
        new_temp38 = project_big(explicate_10)
        new_temp39 = add(new_temp37, new_temp38)
        new_temp40 = inject_big(new_temp39)
        new_temp3 = new_temp40
else:
    new_temp41 = is_big(explicate_10)
    if new_temp41:
        error_pyobj(0)
    else:
        new_temp42 = is_int(explicate_9)
        if new_temp42:
            new_temp43 = project_int(explicate_9)
            explicate_11 = new_temp43
        else:
            new_temp44 = project_bool(explicate_9)
            explicate_11 = new_temp44
        new_temp45 = is_int(explicate_10)
        if new_temp45:
            new_temp46 = project_int(explicate_10)
            explicate_12 = new_temp46
        else:
            new_temp47 = project_bool(explicate_10)
            explicate_12 = new_temp47
        new_temp48 = explicate_11 + explicate_12
        new_temp49 = inject_int(new_temp48)
        new_temp3 = new_temp49
len = new_temp3
explicate_13 = idx
new_temp50 = inject_int(1)
explicate_14 = new_temp50
new_temp51 = is_big(explicate_13)
if new_temp51:
    new_temp52 = is_big(explicate_14)
    if new_temp52:
        new_temp53 = project_big(explicate_13)
        new_temp54 = project_big(explicate_14)
        new_temp55 = add(new_temp53, new_temp54)
        new_temp56 = inject_big(new_temp55)
        new_temp4 = new_temp56
else:
    new_temp57 = is_big(explicate_14)
    if new_temp57:
        error_pyobj(0)
    else:
        new_temp58 = is_int(explicate_13)
        if new_temp58:
            new_temp59 = project_int(explicate_13)
            explicate_15 = new_temp59
        else:
            new_temp60 = project_bool(explicate_13)
            explicate_15 = new_temp60
        new_temp61 = is_int(explicate_14)
        if new_temp61:
            new_temp62 = project_int(explicate_14)
            explicate_16 = new_temp62
        else:
            new_temp63 = project_bool(explicate_14)
            explicate_16 = new_temp63
        new_temp64 = explicate_15 + explicate_16
        new_temp65 = inject_int(new_temp64)
        new_temp4 = new_temp65
idx = new_temp4
print(sum)


--- x86 IR ---
call  get_subscript x,idx
movl  eax ,  new_temp17
movl  new_temp17 ,  new_temp0
movl  sum ,  explicate_5
movl  new_temp0 ,  explicate_6
call  is_big explicate_5
movl  eax ,  new_temp18
if1
cmp 0, new_temp18
je else1
then1
call  is_big explicate_6
movl  eax ,  new_temp19
if2
cmp 0, new_temp19
je end if2
then2
call  project_big explicate_5
movl  eax ,  new_temp20
call  project_big explicate_6
movl  eax ,  new_temp21
call  add new_temp20,new_temp21
movl  eax ,  new_temp22
call  inject_big new_temp22
movl  eax ,  new_temp23
movl  new_temp23 ,  new_temp1
end if2
else1
call  is_big explicate_6
movl  eax ,  new_temp24
if2
cmp 0, new_temp24
je else2
then2
call  error_pyobj 0
else2
call  is_int explicate_5
movl  eax ,  new_temp25
if3
cmp 0, new_temp25
je else3
then3
call  project_int explicate_5
movl  eax ,  new_temp26
movl  new_temp26 ,  explicate_7
else3
call  project_bool explicate_5
movl  eax ,  new_temp27
movl  new_temp27 ,  explicate_7
end if3
call  is_int explicate_6
movl  eax ,  new_temp28
if4
cmp 0, new_temp28
je else4
then4
call  project_int explicate_6
movl  eax ,  new_temp29
movl  new_temp29 ,  explicate_8
else4
call  project_bool explicate_6
movl  eax ,  new_temp30
movl  new_temp30 ,  explicate_8
end if4
movl  explicate_7 ,  new_temp31
addl  explicate_8 ,  new_temp31
call  inject_int new_temp31
movl  eax ,  new_temp32
movl  new_temp32 ,  new_temp1
end if2
end if1
movl  new_temp1 ,  sum
movl  1 ,  new_temp33
negl  new_temp33
call  inject_int new_temp33
movl  eax ,  new_temp34
movl  new_temp34 ,  new_temp2
movl  len ,  explicate_9
movl  new_temp2 ,  explicate_10
call  is_big explicate_9
movl  eax ,  new_temp35
if2
cmp 0, new_temp35
je else2
then2
call  is_big explicate_10
movl  eax ,  new_temp36
if3
cmp 0, new_temp36
je end if3
then3
call  project_big explicate_9
movl  eax ,  new_temp37
call  project_big explicate_10
movl  eax ,  new_temp38
call  add new_temp37,new_temp38
movl  eax ,  new_temp39
call  inject_big new_temp39
movl  eax ,  new_temp40
movl  new_temp40 ,  new_temp3
end if3
else2
call  is_big explicate_10
movl  eax ,  new_temp41
if3
cmp 0, new_temp41
je else3
then3
call  error_pyobj 0
else3
call  is_int explicate_9
movl  eax ,  new_temp42
if4
cmp 0, new_temp42
je else4
then4
call  project_int explicate_9
movl  eax ,  new_temp43
movl  new_temp43 ,  explicate_11
else4
call  project_bool explicate_9
movl  eax ,  new_temp44
movl  new_temp44 ,  explicate_11
end if4
call  is_int explicate_10
movl  eax ,  new_temp45
if5
cmp 0, new_temp45
je else5
then5
call  project_int explicate_10
movl  eax ,  new_temp46
movl  new_temp46 ,  explicate_12
else5
call  project_bool explicate_10
movl  eax ,  new_temp47
movl  new_temp47 ,  explicate_12
end if5
movl  explicate_11 ,  new_temp48
addl  explicate_12 ,  new_temp48
call  inject_int new_temp48
movl  eax ,  new_temp49
movl  new_temp49 ,  new_temp3
end if3
end if2
movl  new_temp3 ,  len
movl  idx ,  explicate_13
call  inject_int 1
movl  eax ,  new_temp50
movl  new_temp50 ,  explicate_14
call  is_big explicate_13
movl  eax ,  new_temp51
if3
cmp 0, new_temp51
je else3
then3
call  is_big explicate_14
movl  eax ,  new_temp52
if4
cmp 0, new_temp52
je end if4
then4
call  project_big explicate_13
movl  eax ,  new_temp53
call  project_big explicate_14
movl  eax ,  new_temp54
call  add new_temp53,new_temp54
movl  eax ,  new_temp55
call  inject_big new_temp55
movl  eax ,  new_temp56
movl  new_temp56 ,  new_temp4
end if4
else3
call  is_big explicate_14
movl  eax ,  new_temp57
if4
cmp 0, new_temp57
je else4
then4
call  error_pyobj 0
else4
call  is_int explicate_13
movl  eax ,  new_temp58
if5
cmp 0, new_temp58
je else5
then5
call  project_int explicate_13
movl  eax ,  new_temp59
movl  new_temp59 ,  explicate_15
else5
call  project_bool explicate_13
movl  eax ,  new_temp60
movl  new_temp60 ,  explicate_15
end if5
call  is_int explicate_14
movl  eax ,  new_temp61
if6
cmp 0, new_temp61
je else6
then6
call  project_int explicate_14
movl  eax ,  new_temp62
movl  new_temp62 ,  explicate_16
else6
call  project_bool explicate_14
movl  eax ,  new_temp63
movl  new_temp63 ,  explicate_16
end if6
movl  explicate_15 ,  new_temp64
addl  explicate_16 ,  new_temp64
call  inject_int new_temp64
movl  eax ,  new_temp65
movl  new_temp65 ,  new_temp4
end if4
end if3
movl  new_temp4 ,  idx
call  print sum


--- Control Flow Graph ---


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'sum': {'explicate_11', 'new_temp40', 'new_temp60', 'new_temp3', 'idx', 'explicate_10', 'new_temp48', 'ecx', 'new_temp2', 'new_temp33', 'new_temp65', 'explicate_15', 'explicate_9', 'new_temp57', 'new_temp47', 'new_temp64', 'new_temp58', 'new_temp39', 'explicate_16', 'new_temp63', 'new_temp54', 'explicate_12', 'new_temp0', 'new_temp62', 'new_temp42', 'new_temp56', 'new_temp34', 'new_temp4', 'new_temp36', 'new_temp55', 'new_temp59', 'new_temp41', 'new_temp53', 'new_temp49', 'explicate_14', 'new_temp61', 'eax', 'new_temp50', 'new_temp17', 'edx', 'new_temp37', 'new_temp35', 'new_temp52', 'len', 'new_temp43', 'new_temp44', 'new_temp51', 'new_temp46', 'new_temp45', 'explicate_13', 'new_temp38'}, 'eax': {'explicate_11', 'new_temp4', 'new_temp1', 'idx', 'new_temp3', 'explicate_10', 'new_temp37', 'len', 'explicate_7', 'sum', 'new_temp20', 'new_temp53', 'explicate_6', 'explicate_14', 'explicate_15', 'explicate_13', 'explicate_5', 'explicate_9'}, 'ecx': {'explicate_11', 'new_temp4', 'new_temp1', 'idx', 'new_temp3', 'explicate_10', 'new_temp37', 'len', 'explicate_7', 'sum', 'new_temp20', 'new_temp53', 'explicate_6', 'explicate_14', 'explicate_15', 'explicate_13', 'explicate_5', 'explicate_9'}, 'edx': {'explicate_11', 'new_temp4', 'new_temp1', 'idx', 'new_temp3', 'explicate_10', 'new_temp37', 'len', 'explicate_7', 'sum', 'new_temp20', 'new_temp53', 'explicate_6', 'explicate_14', 'explicate_15', 'explicate_13', 'explicate_5', 'explicate_9'}, 'idx': {'new_temp19', 'explicate_11', 'new_temp40', 'explicate_8', 'new_temp3', 'explicate_10', 'new_temp48', 'sum', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'explicate_5', 'explicate_9', 'explicate_7', 'new_temp47', 'new_temp27', 'new_temp1', 'new_temp39', 'new_temp32', 'new_temp31', 'new_temp30', 'explicate_12', 'explicate_6', 'new_temp0', 'new_temp42', 'new_temp34', 'new_temp18', 'new_temp26', 'new_temp24', 'new_temp28', 'new_temp25', 'new_temp36', 'new_temp20', 'new_temp29', 'new_temp41', 'new_temp49', 'new_temp22', 'eax', 'new_temp17', 'edx', 'new_temp37', 'new_temp35', 'len', 'new_temp43', 'new_temp44', 'new_temp21', 'new_temp46', 'new_temp45', 'new_temp38'}, 'new_temp4': {'new_temp19', 'explicate_11', 'new_temp40', 'explicate_8', 'new_temp3', 'explicate_10', 'new_temp48', 'sum', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'explicate_5', 'explicate_9', 'explicate_7', 'new_temp57', 'new_temp47', 'new_temp27', 'new_temp1', 'new_temp39', 'new_temp32', 'new_temp31', 'new_temp30', 'explicate_12', 'explicate_6', 'new_temp0', 'new_temp42', 'new_temp34', 'new_temp18', 'new_temp26', 'new_temp24', 'new_temp28', 'new_temp25', 'new_temp36', 'new_temp20', 'new_temp29', 'new_temp41', 'new_temp49', 'explicate_14', 'new_temp22', 'eax', 'new_temp50', 'new_temp17', 'edx', 'new_temp37', 'new_temp35', 'new_temp52', 'len', 'new_temp43', 'new_temp44', 'new_temp51', 'new_temp21', 'new_temp46', 'new_temp45', 'explicate_13', 'new_temp38'}, 'new_temp1': {'eax', 'new_temp19', 'new_temp24', 'new_temp4', 'new_temp17', 'edx', 'new_temp3', 'idx', 'len', 'new_temp0', 'ecx', 'explicate_6', 'explicate_5', 'new_temp18'}, 'new_temp3': {'new_temp19', 'explicate_8', 'idx', 'explicate_10', 'sum', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'explicate_5', 'explicate_9', 'explicate_7', 'new_temp27', 'new_temp1', 'new_temp32', 'new_temp31', 'new_temp30', 'explicate_6', 'new_temp0', 'new_temp34', 'new_temp18', 'new_temp26', 'new_temp24', 'new_temp4', 'new_temp28', 'new_temp25', 'new_temp36', 'new_temp20', 'new_temp29', 'new_temp41', 'new_temp22', 'eax', 'new_temp17', 'edx', 'new_temp35', 'new_temp21'}, 'len': {'new_temp19', 'new_temp24', 'new_temp4', 'new_temp28', 'explicate_6', 'new_temp25', 'explicate_8', 'idx', 'sum', 'new_temp29', 'new_temp20', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'new_temp34', 'explicate_5', 'explicate_7', 'new_temp22', 'eax', 'new_temp27', 'new_temp1', 'new_temp17', 'edx', 'new_temp32', 'new_temp31', 'new_temp30', 'new_temp21', 'new_temp0', 'new_temp18', 'new_temp26'}, 'new_temp17': {'sum', 'idx', 'new_temp4', 'new_temp1', 'new_temp3', 'len'}, 'new_temp0': {'sum', 'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'len', 'explicate_5'}, 'explicate_5': {'eax', 'new_temp19', 'new_temp4', 'new_temp24', 'new_temp1', 'new_temp25', 'edx', 'idx', 'new_temp3', 'len', 'new_temp0', 'ecx', 'explicate_6', 'new_temp18'}, 'explicate_6': {'new_temp19', 'new_temp24', 'new_temp4', 'new_temp28', 'new_temp25', 'new_temp3', 'idx', 'new_temp20', 'ecx', 'explicate_7', 'explicate_5', 'eax', 'new_temp27', 'new_temp1', 'edx', 'len', 'new_temp18', 'new_temp26'}, 'new_temp18': {'new_temp4', 'new_temp1', 'new_temp3', 'explicate_6', 'idx', 'len', 'explicate_5'}, 'edi': set(), 'ebx': set(), 'esi': set(), 'new_temp19': {'idx', 'new_temp4', 'new_temp1', 'explicate_6', 'new_temp3', 'len', 'explicate_5'}, 'new_temp24': {'new_temp4', 'new_temp1', 'new_temp3', 'explicate_6', 'idx', 'len', 'explicate_5'}, 'new_temp20': {'new_temp4', 'new_temp3', 'idx', 'ecx', 'eax', 'edx', 'len', 'new_temp21', 'explicate_6'}, 'new_temp21': {'new_temp20', 'new_temp4', 'new_temp3', 'idx', 'len'}, 'new_temp22': {'idx', 'new_temp4', 'len', 'new_temp3'}, 'new_temp23': {'idx', 'new_temp4', 'len', 'new_temp3'}, 'new_temp33': {'new_temp4', 'new_temp3', 'idx', 'len', 'sum'}, 'new_temp34': {'sum', 'idx', 'new_temp4', 'new_temp3', 'len'}, 'new_temp2': {'sum', 'new_temp4', 'new_temp3', 'idx', 'len', 'explicate_9'}, 'explicate_9': {'eax', 'new_temp4', 'edx', 'idx', 'new_temp3', 'explicate_10', 'new_temp35', 'sum', 'new_temp36', 'new_temp41', 'ecx', 'new_temp2', 'new_temp42'}, 'explicate_10': {'explicate_11', 'new_temp4', 'new_temp3', 'idx', 'sum', 'new_temp36', 'new_temp41', 'ecx', 'explicate_9', 'eax', 'edx', 'new_temp37', 'new_temp35', 'new_temp43', 'new_temp44', 'new_temp45', 'new_temp42'}, 'new_temp35': {'sum', 'new_temp4', 'new_temp3', 'idx', 'explicate_10', 'explicate_9'}, 'new_temp25': {'new_temp4', 'new_temp3', 'explicate_6', 'idx', 'len', 'explicate_5'}, 'new_temp36': {'sum', 'idx', 'new_temp4', 'new_temp3', 'explicate_10', 'explicate_9'}, 'new_temp41': {'sum', 'idx', 'new_temp4', 'new_temp3', 'explicate_10', 'explicate_9'}, 'new_temp26': {'idx', 'new_temp4', 'explicate_6', 'new_temp3', 'len'}, 'explicate_7': {'eax', 'new_temp4', 'new_temp28', 'explicate_8', 'edx', 'idx', 'new_temp3', 'len', 'new_temp29', 'new_temp30', 'ecx', 'explicate_6'}, 'new_temp27': {'idx', 'new_temp4', 'explicate_6', 'new_temp3', 'len'}, 'new_temp37': {'sum', 'eax', 'new_temp4', 'ecx', 'edx', 'idx', 'explicate_10', 'new_temp38'}, 'new_temp38': {'sum', 'idx', 'new_temp37', 'new_temp4'}, 'new_temp39': {'sum', 'idx', 'new_temp4'}, 'new_temp40': {'sum', 'idx', 'new_temp4'}, 'explicate_13': {'eax', 'new_temp4', 'new_temp58', 'new_temp50', 'edx', 'new_temp52', 'sum', 'new_temp51', 'ecx', 'explicate_14', 'new_temp57'}, 'new_temp50': {'sum', 'new_temp4', 'explicate_13'}, 'explicate_14': {'eax', 'new_temp4', 'new_temp58', 'new_temp60', 'edx', 'new_temp52', 'sum', 'new_temp51', 'new_temp59', 'new_temp53', 'ecx', 'explicate_13', 'explicate_15', 'new_temp61', 'new_temp57'}, 'new_temp51': {'sum', 'explicate_14', 'new_temp4', 'explicate_13'}, 'new_temp42': {'sum', 'new_temp4', 'idx', 'explicate_10', 'explicate_9'}, 'new_temp28': {'new_temp4', 'new_temp3', 'explicate_6', 'idx', 'explicate_7', 'len'}, 'new_temp52': {'sum', 'explicate_14', 'new_temp4', 'explicate_13'}, 'new_temp57': {'sum', 'explicate_14', 'new_temp4', 'explicate_13'}, 'new_temp43': {'sum', 'idx', 'new_temp4', 'explicate_10'}, 'explicate_11': {'eax', 'new_temp4', 'edx', 'idx', 'explicate_10', 'sum', 'explicate_12', 'ecx', 'new_temp46', 'new_temp45', 'new_temp47'}, 'new_temp44': {'sum', 'idx', 'new_temp4', 'explicate_10'}, 'new_temp29': {'idx', 'new_temp4', 'new_temp3', 'explicate_7', 'len'}, 'explicate_8': {'new_temp4', 'new_temp3', 'idx', 'len', 'new_temp31', 'explicate_7'}, 'new_temp30': {'idx', 'new_temp4', 'new_temp3', 'explicate_7', 'len'}, 'new_temp53': {'sum', 'eax', 'new_temp54', 'ecx', 'edx', 'explicate_14'}, 'new_temp54': {'sum', 'new_temp53'}, 'new_temp55': {'sum'}, 'new_temp56': {'sum'}, 'new_temp58': {'sum', 'explicate_14', 'explicate_13'}, 'new_temp45': {'sum', 'explicate_11', 'new_temp4', 'idx', 'explicate_10'}, 'new_temp31': {'new_temp4', 'explicate_8', 'idx', 'new_temp3', 'len'}, 'new_temp32': {'idx', 'new_temp4', 'len', 'new_temp3'}, 'new_temp59': {'sum', 'explicate_14'}, 'explicate_15': {'eax', 'edx', 'sum', 'new_temp63', 'ecx', 'new_temp62', 'explicate_14', 'explicate_16', 'new_temp61'}, 'new_temp60': {'sum', 'explicate_14'}, 'new_temp46': {'sum', 'explicate_11', 'idx', 'new_temp4'}, 'explicate_12': {'explicate_11', 'new_temp4', 'idx', 'new_temp48', 'sum'}, 'new_temp47': {'sum', 'explicate_11', 'idx', 'new_temp4'}, 'new_temp61': {'sum', 'explicate_14', 'explicate_15'}, 'new_temp48': {'sum', 'new_temp4', 'explicate_12', 'idx'}, 'new_temp49': {'sum', 'idx', 'new_temp4'}, 'new_temp62': {'sum', 'explicate_15'}, 'explicate_16': {'sum', 'new_temp64', 'explicate_15'}, 'new_temp63': {'sum', 'explicate_15'}, 'new_temp64': {'sum', 'explicate_16'}, 'new_temp65': {'sum'}}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'explicate_13': 4, 'explicate_14': 5, 'new_temp4': 6, 'sum': 7, 'len': 4, 'new_temp20': 5, 'explicate_6': 7, 'new_temp1': 5, 'explicate_5': 7, 'explicate_7': 5, 'idx': 6, 'new_temp3': 4, 'explicate_9': 5, 'explicate_10': 7, 'new_temp37': 4, 'new_temp53': 4, 'explicate_15': 4, 'explicate_11': 4, 'new_temp21': 1, 'new_temp51': 1, 'new_temp35': 1, 'new_temp52': 1, 'new_temp17': 1, 'new_temp41': 1, 'new_temp29': 1, 'new_temp36': 1, 'new_temp28': 1, 'new_temp24': 1, 'new_temp18': 1, 'new_temp0': 1, 'new_temp30': 1, 'new_temp57': 1, 'new_temp2': 1, 'explicate_8': 1, 'new_temp31': 2, 'new_temp19': 1, 'new_temp38': 1, 'new_temp45': 1, 'new_temp46': 1, 'new_temp26': 1, 'new_temp34': 1, 'new_temp42': 1, 'explicate_12': 1, 'new_temp32': 1, 'new_temp50': 1, 'new_temp58': 1, 'new_temp27': 1, 'new_temp22': 1, 'new_temp47': 1, 'new_temp61': 1, 'new_temp33': 1, 'new_temp23': 1, 'new_temp48': 2, 'new_temp25': 1, 'explicate_16': 1, 'new_temp62': 1, 'new_temp49': 1, 'new_temp54': 1, 'new_temp59': 1, 'new_temp63': 1, 'new_temp44': 1, 'new_temp43': 1, 'new_temp39': 1, 'new_temp60': 1, 'new_temp40': 1, 'new_temp64': 2, 'new_temp56': 1, 'new_temp65': 1, 'new_temp55': 1}
Spilled set:
 {'sum', 'explicate_10', 'explicate_5', 'explicate_6'}


--------------Spilling----------------
unspillable_set
 {'unspillable_0'}
continue_looping
 True


-------------- Reset Liveness----------------


-------------- Liveness----------------


--------------Interference----------------


Interference Graph:  {'new_temp4': {'new_temp19', 'explicate_11', 'new_temp40', 'explicate_8', 'new_temp3', 'explicate_10', 'new_temp48', 'sum', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'explicate_5', 'explicate_9', 'explicate_7', 'new_temp57', 'new_temp47', 'new_temp27', 'unspillable_0', 'new_temp1', 'new_temp39', 'new_temp32', 'new_temp31', 'new_temp30', 'explicate_12', 'new_temp0', 'explicate_6', 'new_temp42', 'new_temp34', 'new_temp18', 'new_temp26', 'new_temp24', 'new_temp28', 'new_temp25', 'new_temp36', 'new_temp20', 'new_temp29', 'new_temp41', 'new_temp49', 'explicate_14', 'new_temp22', 'eax', 'new_temp50', 'edx', 'new_temp17', 'new_temp37', 'new_temp35', 'new_temp52', 'len', 'new_temp43', 'new_temp44', 'new_temp51', 'new_temp21', 'new_temp46', 'new_temp45', 'explicate_13', 'new_temp38'}, 'eax': {'explicate_11', 'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'new_temp37', 'len', 'new_temp20', 'new_temp53', 'explicate_14', 'explicate_15', 'explicate_13', 'explicate_7', 'explicate_9'}, 'ecx': {'explicate_11', 'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'new_temp37', 'len', 'new_temp20', 'new_temp53', 'explicate_14', 'explicate_15', 'explicate_13', 'explicate_7', 'explicate_9'}, 'edx': {'explicate_11', 'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'new_temp37', 'len', 'new_temp20', 'new_temp53', 'explicate_14', 'explicate_15', 'explicate_13', 'explicate_7', 'explicate_9'}, 'new_temp1': {'new_temp19', 'new_temp24', 'new_temp4', 'idx', 'new_temp3', 'new_temp0', 'ecx', 'explicate_5', 'eax', 'unspillable_0', 'edx', 'new_temp17', 'len', 'explicate_6', 'new_temp18'}, 'new_temp3': {'new_temp19', 'explicate_8', 'idx', 'explicate_10', 'sum', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'explicate_5', 'explicate_9', 'explicate_7', 'new_temp27', 'unspillable_0', 'new_temp1', 'new_temp32', 'new_temp31', 'new_temp30', 'new_temp0', 'explicate_6', 'new_temp34', 'new_temp18', 'new_temp26', 'new_temp24', 'new_temp4', 'new_temp28', 'new_temp25', 'new_temp36', 'new_temp20', 'new_temp29', 'new_temp41', 'new_temp22', 'eax', 'edx', 'new_temp17', 'new_temp35', 'new_temp21'}, 'idx': {'new_temp19', 'explicate_11', 'new_temp40', 'explicate_8', 'new_temp3', 'explicate_10', 'new_temp48', 'sum', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'explicate_5', 'explicate_9', 'explicate_7', 'new_temp47', 'new_temp27', 'unspillable_0', 'new_temp1', 'new_temp39', 'new_temp32', 'new_temp31', 'new_temp30', 'explicate_12', 'new_temp0', 'explicate_6', 'new_temp42', 'new_temp34', 'new_temp18', 'new_temp26', 'new_temp24', 'new_temp28', 'new_temp25', 'new_temp36', 'new_temp20', 'new_temp29', 'new_temp41', 'new_temp49', 'new_temp22', 'eax', 'edx', 'new_temp17', 'new_temp37', 'new_temp35', 'len', 'new_temp43', 'new_temp44', 'new_temp21', 'new_temp46', 'new_temp45', 'new_temp38'}, 'len': {'new_temp19', 'new_temp24', 'new_temp4', 'new_temp28', 'new_temp25', 'explicate_8', 'idx', 'new_temp0', 'sum', 'new_temp29', 'new_temp20', 'new_temp23', 'ecx', 'new_temp33', 'new_temp2', 'new_temp34', 'explicate_5', 'explicate_7', 'new_temp22', 'eax', 'new_temp27', 'unspillable_0', 'new_temp1', 'edx', 'new_temp17', 'new_temp32', 'new_temp31', 'new_temp30', 'new_temp21', 'explicate_6', 'new_temp18', 'new_temp26'}, 'new_temp17': {'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'len'}, 'new_temp0': {'idx', 'new_temp4', 'unspillable_0', 'new_temp1', 'new_temp3', 'len', 'explicate_5'}, 'unspillable_0': {'new_temp4', 'new_temp1', 'new_temp3', 'new_temp0', 'idx', 'len'}, 'new_temp18': {'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'len'}, 'edi': set(), 'ebx': set(), 'esi': set(), 'new_temp19': {'new_temp4', 'new_temp1', 'new_temp3', 'idx', 'len'}, 'new_temp24': {'idx', 'new_temp4', 'new_temp1', 'new_temp3', 'len'}, 'new_temp20': {'eax', 'idx', 'new_temp4', 'new_temp21', 'ecx', 'edx', 'new_temp3', 'len'}, 'new_temp21': {'idx', 'new_temp4', 'new_temp20', 'new_temp3', 'len'}, 'new_temp22': {'new_temp3', 'idx', 'new_temp4', 'len'}, 'new_temp23': {'new_temp3', 'idx', 'new_temp4', 'len'}, 'new_temp33': {'new_temp4', 'new_temp3', 'idx', 'len'}, 'new_temp34': {'idx', 'new_temp4', 'len', 'new_temp3'}, 'new_temp2': {'new_temp4', 'new_temp3', 'idx', 'len', 'explicate_9'}, 'explicate_9': {'eax', 'new_temp4', 'edx', 'new_temp3', 'idx', 'explicate_10', 'new_temp35', 'new_temp36', 'new_temp41', 'ecx', 'new_temp2', 'new_temp42'}, 'new_temp35': {'new_temp3', 'idx', 'new_temp4', 'explicate_9'}, 'new_temp25': {'new_temp3', 'idx', 'new_temp4', 'len'}, 'new_temp36': {'idx', 'new_temp4', 'new_temp3', 'explicate_9'}, 'new_temp41': {'idx', 'new_temp4', 'new_temp3', 'explicate_9'}, 'new_temp26': {'idx', 'new_temp4', 'len', 'new_temp3'}, 'explicate_7': {'eax', 'new_temp4', 'new_temp28', 'explicate_8', 'edx', 'idx', 'new_temp3', 'len', 'new_temp29', 'new_temp30', 'ecx'}, 'new_temp27': {'idx', 'new_temp4', 'len', 'new_temp3'}, 'new_temp37': {'eax', 'new_temp4', 'ecx', 'edx', 'idx', 'new_temp38'}, 'new_temp38': {'idx', 'new_temp37', 'new_temp4'}, 'new_temp39': {'idx', 'new_temp4'}, 'new_temp40': {'idx', 'new_temp4'}, 'explicate_13': {'eax', 'new_temp4', 'new_temp58', 'new_temp50', 'edx', 'new_temp52', 'new_temp51', 'ecx', 'explicate_14', 'new_temp57'}, 'new_temp50': {'new_temp4', 'explicate_13'}, 'explicate_14': {'eax', 'new_temp4', 'new_temp58', 'new_temp60', 'new_temp52', 'edx', 'new_temp51', 'new_temp59', 'new_temp53', 'ecx', 'explicate_13', 'explicate_15', 'new_temp61', 'new_temp57'}, 'new_temp51': {'explicate_14', 'new_temp4', 'explicate_13'}, 'new_temp42': {'idx', 'new_temp4', 'explicate_9'}, 'new_temp28': {'new_temp4', 'new_temp3', 'idx', 'explicate_7', 'len'}, 'new_temp52': {'explicate_14', 'explicate_13', 'new_temp4'}, 'new_temp57': {'explicate_14', 'new_temp4', 'explicate_13'}, 'new_temp43': {'idx', 'new_temp4'}, 'explicate_11': {'eax', 'new_temp4', 'edx', 'idx', 'explicate_12', 'ecx', 'new_temp46', 'new_temp45', 'new_temp47'}, 'new_temp44': {'idx', 'new_temp4'}, 'new_temp29': {'new_temp4', 'new_temp3', 'idx', 'explicate_7', 'len'}, 'explicate_8': {'new_temp4', 'idx', 'new_temp3', 'len', 'new_temp31', 'explicate_7'}, 'new_temp30': {'new_temp4', 'new_temp3', 'idx', 'explicate_7', 'len'}, 'new_temp53': {'eax', 'edx', 'new_temp54', 'ecx', 'explicate_14'}, 'new_temp54': {'new_temp53'}, 'new_temp55': set(), 'new_temp56': set(), 'new_temp58': {'explicate_14', 'explicate_13'}, 'new_temp45': {'explicate_11', 'idx', 'new_temp4'}, 'new_temp31': {'new_temp4', 'explicate_8', 'new_temp3', 'idx', 'len'}, 'new_temp32': {'new_temp3', 'idx', 'new_temp4', 'len'}, 'new_temp59': {'explicate_14'}, 'explicate_15': {'eax', 'edx', 'new_temp63', 'ecx', 'new_temp62', 'explicate_14', 'explicate_16', 'new_temp61'}, 'new_temp60': {'explicate_14'}, 'new_temp46': {'idx', 'new_temp4', 'explicate_11'}, 'explicate_12': {'explicate_11', 'new_temp4', 'idx', 'new_temp48'}, 'new_temp47': {'idx', 'new_temp4', 'explicate_11'}, 'new_temp61': {'explicate_14', 'explicate_15'}, 'new_temp48': {'new_temp4', 'explicate_12', 'idx'}, 'new_temp49': {'idx', 'new_temp4'}, 'new_temp62': {'explicate_15'}, 'explicate_16': {'new_temp64', 'explicate_15'}, 'new_temp63': {'explicate_15'}, 'new_temp64': {'explicate_16'}, 'new_temp65': set()}


--------------Coloring----------------
Colored graph:
 {'eax': 1, 'ecx': 2, 'edx': 3, 'edi': 4, 'ebx': 5, 'esi': 6, 'unspillable_0': 1, 'explicate_13': 4, 'explicate_14': 5, 'new_temp4': 6, 'len': 4, 'new_temp20': 5, 'new_temp1': 5, 'explicate_7': 5, 'idx': 6, 'new_temp3': 4, 'explicate_9': 5, 'new_temp37': 4, 'new_temp53': 4, 'new_temp0': 2, 'explicate_15': 4, 'explicate_11': 4, 'new_temp21': 1, 'new_temp51': 1, 'new_temp35': 1, 'new_temp52': 1, 'new_temp17': 1, 'new_temp41': 1, 'new_temp29': 1, 'new_temp36': 1, 'new_temp28': 1, 'new_temp24': 1, 'new_temp18': 1, 'new_temp30': 1, 'new_temp57': 1, 'new_temp2': 1, 'explicate_8': 1, 'new_temp31': 2, 'new_temp19': 1, 'new_temp38': 1, 'new_temp45': 1, 'new_temp46': 1, 'new_temp26': 1, 'new_temp34': 1, 'new_temp42': 1, 'explicate_12': 1, 'new_temp32': 1, 'new_temp50': 1, 'new_temp58': 1, 'new_temp27': 1, 'new_temp22': 1, 'new_temp47': 1, 'new_temp61': 1, 'new_temp33': 1, 'new_temp23': 1, 'new_temp48': 2, 'new_temp25': 1, 'explicate_16': 1, 'new_temp62': 1, 'new_temp49': 1, 'new_temp54': 1, 'new_temp59': 1, 'new_temp63': 1, 'new_temp44': 1, 'new_temp43': 1, 'new_temp39': 1, 'new_temp60': 1, 'new_temp40': 1, 'new_temp64': 2, 'new_temp56': 1, 'new_temp65': 1, 'new_temp55': 1}
Spilled set:
 {'sum', 'explicate_10', 'explicate_5', 'explicate_6'}


--------------Spilling----------------
unspillable_set
 {'unspillable_0'}
continue_looping
 False



Homes for CFG0:  {'sum': -4, 'explicate_10': -8, 'explicate_5': -12, 'explicate_6': -16, 'unspillable_0': 'eax', 'explicate_13': 'edi', 'explicate_14': 'ebx', 'new_temp4': 'esi', 'len': 'edi', 'new_temp20': 'ebx', 'new_temp1': 'ebx', 'explicate_7': 'ebx', 'idx': 'esi', 'new_temp3': 'edi', 'explicate_9': 'ebx', 'new_temp37': 'edi', 'new_temp53': 'edi', 'new_temp0': 'ecx', 'explicate_15': 'edi', 'explicate_11': 'edi', 'new_temp21': 'eax', 'new_temp51': 'eax', 'new_temp35': 'eax', 'new_temp52': 'eax', 'new_temp17': 'eax', 'new_temp41': 'eax', 'new_temp29': 'eax', 'new_temp36': 'eax', 'new_temp28': 'eax', 'new_temp24': 'eax', 'new_temp18': 'eax', 'new_temp30': 'eax', 'new_temp57': 'eax', 'new_temp2': 'eax', 'explicate_8': 'eax', 'new_temp31': 'ecx', 'new_temp19': 'eax', 'new_temp38': 'eax', 'new_temp45': 'eax', 'new_temp46': 'eax', 'new_temp26': 'eax', 'new_temp34': 'eax', 'new_temp42': 'eax', 'explicate_12': 'eax', 'new_temp32': 'eax', 'new_temp50': 'eax', 'new_temp58': 'eax', 'new_temp27': 'eax', 'new_temp22': 'eax', 'new_temp47': 'eax', 'new_temp61': 'eax', 'new_temp33': 'eax', 'new_temp23': 'eax', 'new_temp48': 'ecx', 'new_temp25': 'eax', 'explicate_16': 'eax', 'new_temp62': 'eax', 'new_temp49': 'eax', 'new_temp54': 'eax', 'new_temp59': 'eax', 'new_temp63': 'eax', 'new_temp44': 'eax', 'new_temp43': 'eax', 'new_temp39': 'eax', 'new_temp60': 'eax', 'new_temp40': 'eax', 'new_temp64': 'ecx', 'new_temp56': 'eax', 'new_temp65': 'eax', 'new_temp55': 'eax'}
idx
x
